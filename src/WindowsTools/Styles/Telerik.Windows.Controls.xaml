<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animation="clr-namespace:Telerik.Windows.Controls.Animation;assembly=Telerik.Windows.Controls"
    xmlns:c="http://schemas.telerik.com/2008/xaml/compile"
    xmlns:callout="clr-namespace:Telerik.Windows.Controls.Callout;assembly=Telerik.Windows.Controls"
    xmlns:dragDrop="clr-namespace:Telerik.Windows.Controls.DragDrop;assembly=Telerik.Windows.Controls"
    xmlns:expander="clr-namespace:Telerik.Windows.Controls.Expander;assembly=Telerik.Windows.Controls"
    xmlns:filteringEditors="clr-namespace:Telerik.Windows.Controls.Filtering.Editors;assembly=Telerik.Windows.Controls"
    xmlns:helpers="clr-namespace:Telerik.Windows.Controls.Theming.Helpers;assembly=Telerik.Windows.Controls"
    xmlns:legend="clr-namespace:Telerik.Windows.Controls.Legend;assembly=Telerik.Windows.Controls"
    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:slider="clr-namespace:Telerik.Windows.Controls.Slider;assembly=Telerik.Windows.Controls"
    xmlns:stepProgressBar="clr-namespace:Telerik.Windows.Controls.StepProgressBar;assembly=Telerik.Windows.Controls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:taskBoard="clr-namespace:Telerik.Windows.Controls.TaskBoard;assembly=Telerik.Windows.Controls"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:telerikDragDrop="clr-namespace:Telerik.Windows.DragDrop;assembly=Telerik.Windows.Controls"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls.Primitives;assembly=Telerik.Windows.Controls"
    xmlns:telerikShapes="clr-namespace:Telerik.Windows.Shapes;assembly=Telerik.Windows.Controls"
    xmlns:telerikTransitions="clr-namespace:Telerik.Windows.Controls.TransitionEffects;assembly=Telerik.Windows.Controls"
    xmlns:telerikTransitonControl="clr-namespace:Telerik.Windows.Controls.TransitionControl;assembly=Telerik.Windows.Controls"
    xmlns:touch="clr-namespace:Telerik.Windows.Input.Touch;assembly=Telerik.Windows.Controls"
    mc:Ignorable="c">
    <ResourceDictionary.MergedDictionaries>
        <telerik:CrystalResourceDictionary />
    </ResourceDictionary.MergedDictionaries>
    <telerik1:EnumToBooleanConverter x:Key="EnumToBooleanConverter" />
    <telerik1:DragDropBooleanToVisibilityConverter x:Key="DragDropBooleanToVisibilityConverter" />
    <telerik1:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <expander:ExpandDirectionToRotationAngleConverter x:Key="ExpandDirectionToRotationAngleConverter" />
    <telerik1:MultiBindingBooleanOrConverter x:Key="MultiBindingBooleanOrConverter" />
    <telerik1:ThicknessToOrientedThicknessConverter x:Key="ThicknessToOrientedThicknessConverter" />
    <telerik1:CornerRadiusConverter x:Key="CornerRadiusConverter" />
    <telerik1:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />
    <telerik1:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter" />
    <Geometry x:Key="ArrowTopRight8x8">M0,0 L8,0 8,8 z</Geometry>
    <Geometry x:Key="DragArrow">M 0 1 L 0 0 2 2 0 4 0 3</Geometry>
    <FontFamily x:Key="TelerikWebUI">/Telerik.Windows.Controls;component/Themes/Fonts/old/TelerikWebUI.ttf#TelerikWebUI</FontFamily>
    <sys:String x:Key="GlyphArrowsKpi"></sys:String>
    <sys:String x:Key="GlyphArrowChevronUp"></sys:String>
    <sys:String x:Key="GlyphArrowChevronRight"></sys:String>
    <sys:String x:Key="GlyphArrowChevronDown"></sys:String>
    <sys:String x:Key="GlyphArrowChevronLeft"></sys:String>
    <sys:String x:Key="GlyphArrowRight"></sys:String>
    <sys:String x:Key="GlyphLinkHorizontal"></sys:String>
    <sys:String x:Key="GlyphCancel"></sys:String>
    <sys:String x:Key="GlyphCheck"></sys:String>
    <sys:String x:Key="GlyphPlus"></sys:String>
    <sys:String x:Key="GlyphPreview"></sys:String>
    <sys:String x:Key="GlyphInsertUp"></sys:String>
    <sys:String x:Key="GlyphInsertDown"></sys:String>
    <sys:String x:Key="GlyphUser"></sys:String>
    <mat:MaterialShadowDepth x:Key="PopupShadowDepth">Depth2</mat:MaterialShadowDepth>
    <SolidColorBrush x:Key="RadHyperlinkButtonNormalBrush" Color="#8dc1ff" />
    <SolidColorBrush x:Key="RadHyperlinkButtonVisitedBrush" Color="#327fd8" />
    <SolidColorBrush x:Key="TaskBoardItem_Image_BorderBrush" Color="#FFFFFF" />
    <ControlTemplate x:Key="ErrorTooltipTemplate" TargetType="ToolTip">
        <Grid
            x:Name="RootVisual"
            HorizontalAlignment="Right"
            Opacity="0"
            RenderTransformOrigin="0 0"
            SnapsToDevicePixels="True">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25" />
            </Grid.RenderTransform>
            <Border
                Margin="1,0,0,0"
                Background="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                CornerRadius="0 5 5 5"
                UseLayoutRounding="True">
                <ContentPresenter
                    Margin="7,4"
                    VerticalAlignment="Center"
                    Content="{Binding ErrorContent}"
                    TextBlock.FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                    TextBlock.FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                    TextBlock.Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
            </Border>
            <ContentControl />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Open">
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetName="xform"
                                    Storyboard.TargetProperty="X"
                                    To="0"
                                    Duration="0:0:0.3">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".4" EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation
                                    Storyboard.TargetName="RootVisual"
                                    Storyboard.TargetProperty="Opacity"
                                    To="1"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="0"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="xform"
                                Storyboard.TargetProperty="X"
                                To="0"
                                Duration="0" />
                            <DoubleAnimation
                                Storyboard.TargetName="RootVisual"
                                Storyboard.TargetProperty="Opacity"
                                To="1"
                                Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ValidationTooltipTemplate">
        <Grid VerticalAlignment="Top" SnapsToDevicePixels="True">
            <AdornedElementPlaceholder x:Name="Holder" />
            <Border
                BorderBrush="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                BorderThickness="1"
                CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
            <Path
                Width="8"
                Height="8"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Data="{StaticResource ArrowTopRight8x8}"
                Fill="{telerik1:CrystalResource ResourceKey=ValidationBrush}" />
            <ToolTipService.ToolTip>
                <ToolTip
                    x:Name="PART_ToolTip"
                    DataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=PlacementTarget.DataContext}"
                    Placement="Right"
                    Template="{StaticResource ErrorTooltipTemplate}" />
            </ToolTipService.ToolTip>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="StaticValidationOnFocusTooltipTemplate">
        <StackPanel Orientation="Horizontal">
            <Grid VerticalAlignment="Top" SnapsToDevicePixels="True">
                <AdornedElementPlaceholder x:Name="Holder" />
                <Border
                    BorderBrush="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                    BorderThickness="1"
                    CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
            </Grid>
            <Grid Margin="1,0,0,0" Visibility="{Binding ElementName=Holder, Path=AdornedElement.IsKeyboardFocusWithin, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Border
                    Background="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                    CornerRadius="{telerik1:CrystalResource ResourceKey=CornerRadius}"
                    SnapsToDevicePixels="True">
                    <TextBlock
                        x:Name="PART_ToolTip"
                        Padding="4,3"
                        VerticalAlignment="Center"
                        FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                        FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                        Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                        Text="{Binding ElementName=Holder, Path=AdornedElement.(Validation.Errors).CurrentItem.ErrorContent}" />
                </Border>
            </Grid>
        </StackPanel>
    </ControlTemplate>
    <Style x:Key="ShadowStyle" TargetType="{x:Type mat:Shadow}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Theme" Value="Crystal" />
    </Style>
    <Style BasedOn="{StaticResource ShadowStyle}" TargetType="{x:Type mat:Shadow}" />
    <Style x:Key="RadGlyphStyle" TargetType="telerik1:RadGlyph">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
    </Style>
    <Style BasedOn="{StaticResource RadGlyphStyle}" TargetType="telerik1:RadGlyph" />
    <Style x:Key="RepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RepeatButtonStyle}" TargetType="RepeatButton" />
    <Style x:Key="ToolTipStyle" TargetType="ToolTip">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ToolTipStyle}" TargetType="ToolTip" />
    <Style x:Key="LabelStyle" TargetType="telerik1:Label">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:Label">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LabelStyle}" TargetType="telerik1:Label" />
    <DataTemplate x:Key="GroupTemplate">
        <ContentPresenter Content="{Binding Header}" />
    </DataTemplate>
    <ItemsPanelTemplate x:Key="GroupPanelTemplate">
        <telerik1:TileListPanel
            x:Name="groupPanelTemplatePanel"
            HorizontalAlignment="{Binding HorizontalTilesAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}"
            VerticalAlignment="{Binding VerticalTilesAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="TileGroupContainerTemplate" TargetType="telerik1:TileGroupContainer">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding GroupHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <ContentPresenter
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{Binding Header}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                Visibility="{Binding GroupHeaderVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
            <ItemsPresenter Grid.Row="1" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="TileGroupContainerStyle" TargetType="telerik1:TileGroupContainer">
        <Setter Property="Template" Value="{StaticResource TileGroupContainerTemplate}" />
        <Setter Property="HeaderTemplate" Value="{Binding GroupTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadTileList}}" />
        <Setter Property="ItemsPanel" Value="{StaticResource GroupPanelTemplate}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="Padding" Value="4,0" />
        <Setter Property="Header" Value="{Binding Header}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <ControlTemplate x:Key="RadTileListTemplate" TargetType="telerik1:RadTileList">
        <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <StackPanel Orientation="Horizontal">
                    <ContentControl
                        x:Name="PART_PanoramaBackground"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        ClipToBounds="False"
                        Content="{TemplateBinding PanoramaBackground}" />
                </StackPanel>
                <ScrollViewer
                    x:Name="PART_ScrollViewer"
                    Margin="0"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CanContentScroll="True"
                    FocusVisualStyle="{x:Null}"
                    HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Hidden">
                    <ItemsPresenter />
                    <ScrollViewer.InputBindings>
                        <KeyBinding
                            Key="A"
                            Command="telerikPrimitives:ListControl.SelectAllCommand"
                            Modifiers="Control" />
                    </ScrollViewer.InputBindings>
                </ScrollViewer>
                <ContentPresenter
                    x:Name="dragVisualPlaceholder"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="RadTileListItemsPanelTemplate">
        <telerik1:TileListGroupPanel />
    </ItemsPanelTemplate>
    <Style x:Key="RadTileListStyle" TargetType="telerik1:RadTileList">
        <Setter Property="Template" Value="{StaticResource RadTileListTemplate}" />
        <Setter Property="ItemsPanel" Value="{StaticResource RadTileListItemsPanelTemplate}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <ControlTemplate x:Key="TileTemplate" TargetType="telerik1:Tile">
        <Grid Margin="{TemplateBinding Padding}">
            <mat:Shadow
                Background="{TemplateBinding Background}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
            <Border
                x:Name="BorderVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
            <Grid>
                <ContentPresenter
                    x:Name="oldContentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="" />
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                <Grid
                    x:Name="CheckGrid"
                    Margin="0,2,2,0"
                    Background="Transparent"
                    IsHitTestVisible="False"
                    Visibility="Collapsed">
                    <Path
                        x:Name="CheckPath"
                        Width="40"
                        Height="40"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Data="M0,0L40,0L40,40z"
                        Fill="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <telerik1:RadGlyph
                        x:Name="Glyph"
                        Margin="0,4,4,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        FontSize="16"
                        Foreground="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                        Glyph="{StaticResource GlyphCheck}"
                        SnapsToDevicePixels="True" />
                </Grid>
                <Border
                    x:Name="SelectedVisual"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding mat:MaterialAssist.CheckedBrush}"
                    BorderThickness="2"
                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                    IsHitTestVisible="False"
                    Visibility="Collapsed" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="SelectedVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush)}" />
                <Setter TargetName="CheckPath" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush)}" />
                <Setter TargetName="SelectedVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="CheckGrid" Property="Visibility" Value="Visible" />
                <Setter TargetName="SelectedVisual" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TileStyle" TargetType="telerik1:Tile">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth2" />
        <Setter Property="Template" Value="{StaticResource TileTemplate}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="TileType" Value="Double" />
        <Setter Property="UseLayoutRounding" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource TileStyle}" TargetType="telerik1:Tile" />
    <Style BasedOn="{StaticResource RadTileListStyle}" TargetType="telerik1:RadTileList" />
    <Style BasedOn="{StaticResource TileGroupContainerStyle}" TargetType="telerik1:TileGroupContainer" />
    <Style x:Key="GroupBoxStyle" TargetType="telerik1:GroupBox">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="Header" Value="GroupBox" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:GroupBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Header" Grid.Column="1">
                            <ContentPresenter
                                Margin="0,4"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                        <Border
                            x:Name="PART_Border"
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="3"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ContentPresenter x:Name="Content" Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource GroupBoxStyle}" TargetType="telerik1:GroupBox" />
    <Style TargetType="dragDrop:DragVisualCue">
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:DragVisualCue">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="dragDrop:DragArrow">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:DragArrow">
                    <Grid>
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="15" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Border
                                Grid.Row="1"
                                Grid.RowSpan="2"
                                Margin="0,0,-1,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,0,1">
                                <ContentPresenter
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <Path
                                Grid.RowSpan="4"
                                Grid.Column="1"
                                Data="{StaticResource DragArrow}"
                                Fill="{TemplateBinding Background}"
                                Stretch="Fill"
                                Stroke="{TemplateBinding BorderBrush}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadToolTipStyle" TargetType="telerik1:RadToolTip">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Border
                        Background="#FFFFFFFF"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.BorderBrush>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#FFA3AEB9" />
                                <GradientStop Offset="0.375" Color="#FF8399A9" />
                                <GradientStop Offset="0.375" Color="#FF718597" />
                                <GradientStop Offset="1" Color="#FF617584" />
                            </LinearGradientBrush>
                        </Border.BorderBrush>
                        <Border
                            Padding="3,0"
                            Background="#FFF7F8FA"
                            BorderBrush="#FFFFFFFF"
                            BorderThickness="1"
                            CornerRadius="1">
                            <TextBlock Margin="3,0" Text="{Binding}" />
                        </Border>
                    </Border>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToolTip">
                    <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
    </Style>
    <Style x:Key="RadToolTipContentViewStyle" TargetType="telerik1:RadToolTipContentView">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToolTipContentView">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadToolTipStyle}" TargetType="telerik1:RadToolTip" />
    <Style BasedOn="{StaticResource RadToolTipContentViewStyle}" TargetType="telerik1:RadToolTipContentView" />
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Width" Value="4" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Margin" Value="-6,0" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
    </Style>
    <Style x:Key="BusyIndicatorProgressBarStyle" TargetType="telerik1:RadProgressBar">
        <Setter Property="Margin" Value="0,18" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadProgressBar">
                    <Grid Width="180" HorizontalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid
                            x:Name="ProgressBarSpinner"
                            Width="48"
                            Height="48"
                            Margin="40,0,0,18">
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border1Rotate" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border1"
                                    Opacity="1"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border2Rotate" Angle="30" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border2"
                                    Opacity="0.3"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border3Rotate" Angle="60" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border3"
                                    Opacity="0.3"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border4Rotate" Angle="90" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border4"
                                    Opacity="0.3"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border5Rotate" Angle="120" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border5"
                                    Opacity="0.3"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border6Rotate" Angle="150" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border6"
                                    Opacity="0.3"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border7Rotate" Angle="180" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border7"
                                    Opacity="0.4"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border8Rotate" Angle="210" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border8"
                                    Opacity="0.5"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border9Rotate" Angle="240" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border9"
                                    Opacity="0.6"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border10Rotate" Angle="270" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border10"
                                    Opacity="0.7"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border11Rotate" Angle="300" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border11"
                                    Opacity="0.8"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                            <Canvas RenderTransformOrigin="0,.5">
                                <Canvas.RenderTransform>
                                    <RotateTransform x:Name="border12Rotate" Angle="330" />
                                </Canvas.RenderTransform>
                                <Border
                                    x:Name="border12"
                                    Opacity="0.9"
                                    Style="{StaticResource BorderStyle}" />
                            </Canvas>
                        </Grid>
                        <Border
                            x:Name="ProgressBarTrack"
                            Grid.Row="1"
                            MinHeight="9"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <mat:ClipBorder
                            x:Name="DeterminateRoot"
                            Grid.Row="1"
                            BorderThickness="0"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="SkipValueSpacer" />
                                <Rectangle
                                    x:Name="ProgressBarIndicator"
                                    Grid.Column="1"
                                    Fill="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
                            </Grid>
                        </mat:ClipBorder>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarSpinner" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation
                                            BeginTime="00:00:00.00"
                                            Storyboard.TargetName="border1"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.3"
                                            Duration="0:0:0.49" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border2"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.3"
                                            Duration="0:0:0.49" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.14"
                                            Storyboard.TargetName="border3"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.3"
                                            Duration="0:0:0.49" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.21"
                                            Storyboard.TargetName="border4"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.3"
                                            Duration="0:0:0.49" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.28"
                                            Storyboard.TargetName="border5"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.3"
                                            Duration="0:0:0.49" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.35"
                                            Storyboard.TargetName="border6"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.3"
                                            Duration="0:0:0.49" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border7"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.4"
                                            To="0.3"
                                            Duration="0:0:0.07" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.42"
                                            Storyboard.TargetName="border7"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.4"
                                            Duration="0:0:0.42" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border8"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.5"
                                            To="0.3"
                                            Duration="0:0:0.14" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.49"
                                            Storyboard.TargetName="border8"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.5"
                                            Duration="0:0:0.35" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border9"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.6"
                                            To="0.3"
                                            Duration="0:0:0.21" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.56"
                                            Storyboard.TargetName="border9"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.6"
                                            Duration="0:0:0.28" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border10"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.7"
                                            To="0.3"
                                            Duration="0:0:0.28" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.63"
                                            Storyboard.TargetName="border10"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.7"
                                            Duration="0:0:0.21" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border11"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.8"
                                            To="0.3"
                                            Duration="0:0:0.35" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.70"
                                            Storyboard.TargetName="border11"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.8"
                                            Duration="0:0:0.14" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.07"
                                            Storyboard.TargetName="border12"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.9"
                                            To="0.3"
                                            Duration="0:0:0.42" />
                                        <DoubleAnimation
                                            BeginTime="00:00:00.77"
                                            Storyboard.TargetName="border12"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0.9"
                                            Duration="0:0:0.07" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ProgressBarTrack" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadBusyIndicatorStyle" TargetType="telerik1:RadBusyIndicator">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="DisplayAfter" Value="00:00:00.1" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="ProgressBarStyle" Value="{StaticResource BusyIndicatorProgressBarStyle}" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:FadeAnimation
                        AnimationName="Hide"
                        Direction="Out"
                        TargetElementName="Indicator" />
                    <animation:FadeAnimation
                        AnimationName="Show"
                        Direction="In"
                        TargetElementName="Indicator" />
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="OverlayStyle">
            <Setter.Value>
                <Style TargetType="Rectangle">
                    <Setter Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                    <Setter Property="Opacity" Value="0.05" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadBusyIndicator">
                    <Grid>
                        <ContentControl
                            x:Name="Content"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Foreground="{TemplateBinding Foreground}"
                            IsEnabled="False"
                            IsTabStop="False" />
                        <Rectangle x:Name="Overlay" Style="{TemplateBinding OverlayStyle}" />
                        <Grid
                            x:Name="Indicator"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <telerik1:RadProgressBar
                                x:Name="ProgressBar"
                                Grid.Row="0"
                                mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                AutomationProperties.Name="progress bar"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsIndeterminate="{TemplateBinding IsIndeterminate}"
                                Style="{TemplateBinding ProgressBarStyle}"
                                Value="{TemplateBinding ProgressValue}" />
                            <ContentPresenter
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                Content="{TemplateBinding BusyContent}"
                                ContentTemplate="{TemplateBinding BusyContentTemplate}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="VisibilityStates">
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Overlay"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Visible">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Indicator"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Overlay"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BusyStatusStates">
                                <VisualState x:Name="Idle">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(Control.IsEnabled)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="ProgressBar"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="ProgressBar"
                                            Storyboard.TargetProperty="IsIndeterminate"
                                            Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Busy">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="Content"
                                            Storyboard.TargetProperty="(Control.IsEnabled)"
                                            Duration="00:00:00.001">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>False</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadBusyIndicatorStyle}" TargetType="telerik1:RadBusyIndicator" />
    <Style x:Key="ExpanderHeaderButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="TabIndex" Value="{Binding TabIndex, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="HorizontalAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="VerticalAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalHeaderAlignment, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontStyle" Value="{Binding FontStyle, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontFamily" Value="{Binding FontFamily, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="FontStretch" Value="{Binding FontStretch, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid
                        x:Name="HeaderPanel"
                        Margin="{TemplateBinding Padding}"
                        Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Ellipse
                                x:Name="BorderVisual"
                                Width="24"
                                Height="24"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="1" />
                            <Ellipse
                                x:Name="FocusVisual"
                                Width="24"
                                Height="24"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{x:Null}"
                                IsHitTestVisible="False"
                                Stroke="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                StrokeThickness="2"
                                Visibility="Collapsed" />
                            <telerik1:RadGlyph
                                x:Name="chevron"
                                Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                Glyph="{StaticResource GlyphArrowChevronDown}"
                                RenderTransformOrigin="0.5 0.5">
                                <telerik1:RadGlyph.RenderTransform>
                                    <RotateTransform Angle="{Binding ExpandDirection, RelativeSource={RelativeSource AncestorType=telerik1:RadExpander}, Converter={StaticResource ExpandDirectionToRotationAngleConverter}}" />
                                </telerik1:RadGlyph.RenderTransform>
                            </telerik1:RadGlyph>
                        </Grid>
                        <ContentPresenter
                            x:Name="HeaderContent"
                            Grid.Column="1"
                            Margin="5,0"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="chevron" Property="Glyph" Value="{StaticResource GlyphArrowChevronUp}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="chevron" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ExpanderTemplate" TargetType="telerik1:RadExpander">
        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
            <Border
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="row0" Height="Auto" />
                        <RowDefinition x:Name="row1" Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="col0" Width="Auto" />
                        <ColumnDefinition x:Name="col1" Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <telerikPrimitives:LayoutTransformControl x:Name="HeaderContentTransform" RenderTransformOrigin="0.5 0.5">
                        <telerik1:RadToggleButton
                            x:Name="HeaderButton"
                            ClickMode="{TemplateBinding ClickMode}"
                            Content="{TemplateBinding Header}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Style="{TemplateBinding HeaderButtonStyle}" />
                    </telerikPrimitives:LayoutTransformControl>
                    <ContentPresenter
                        x:Name="Content"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ResultOrientation" Value="Vertical">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1" />
            </Trigger>
            <Trigger Property="ResultOrientation" Value="Horizontal">
                <Setter TargetName="HeaderContentTransform" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Down">
                <Setter TargetName="col0" Property="Width" Value="*" />
                <Setter TargetName="row1" Property="Height" Value="*" />
                <Setter TargetName="Content" Property="Grid.Row" Value="1" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
                <Setter TargetName="col0" Property="Width" Value="*" />
                <Setter TargetName="row0" Property="Height" Value="*" />
                <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                <Setter TargetName="Content" Property="Grid.Column" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="1" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
                <Setter TargetName="col1" Property="Width" Value="*" />
                <Setter TargetName="row0" Property="Height" Value="*" />
                <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                <Setter TargetName="Content" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="0" />
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
                <Setter TargetName="col0" Property="Width" Value="*" />
                <Setter TargetName="row0" Property="Height" Value="*" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Column" Value="1" />
                <Setter TargetName="HeaderContentTransform" Property="Grid.Row" Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadExpanderStyle" TargetType="telerik1:RadExpander">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalHeaderAlignment" Value="Stretch" />
        <Setter Property="VerticalHeaderAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HeaderButtonStyle" Value="{StaticResource ExpanderHeaderButtonStyle}" />
        <Setter Property="Template" Value="{StaticResource ExpanderTemplate}" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="Expand"
                        Direction="In"
                        TargetElementName="Content" />
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="Collapse"
                        Direction="Out"
                        TargetElementName="Content" />
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="ExpandHorizontal"
                        Direction="In"
                        TargetElementName="Content" />
                    <animation:ExpanderExpandCollapseAnimation
                        AnimationName="CollapseHorizontal"
                        Direction="Out"
                        TargetElementName="Content" />
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadExpanderStyle}" TargetType="telerik1:RadExpander" />
    <LinearGradientBrush x:Key="IndeterminateVisualFill" SpreadMethod="Repeat" StartPoint="-0.2,0.5" EndPoint="0.8,0.5">
        <GradientStop Offset="0" />
        <GradientStop Offset="0.1" Color="#33FFFFFF" />
        <GradientStop Offset="0.2" Color="#4CFFFFFF" />
        <GradientStop Offset="0.3" Color="#33FFFFFF" />
        <GradientStop Offset="0.4" />
    </LinearGradientBrush>
    <Style x:Key="RadProgressBarStyle" TargetType="telerik1:RadProgressBar">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Maximum" Value="100" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="9" />
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadProgressBar">
                    <Grid>
                        <telerikPrimitives:LayoutTransformControl x:Name="transformationRoot">
                            <Grid x:Name="Root">
                                <Border
                                    x:Name="ProgressBarTrack"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Grid x:Name="ProgressBarRootGrid">
                                    <Grid
                                        x:Name="IndeterminateRoot"
                                        ClipToBounds="True"
                                        Visibility="Collapsed">
                                        <Rectangle x:Name="IndeterminateVisual" Fill="{StaticResource IndeterminateVisualFill}" />
                                    </Grid>
                                    <mat:ClipBorder
                                        x:Name="DeterminateRoot"
                                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Rectangle
                                                x:Name="SkipValueSpacer"
                                                Width="0"
                                                Height="1"
                                                Fill="Transparent" />
                                            <Rectangle
                                                x:Name="ProgressBarIndicator"
                                                Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                Fill="{TemplateBinding Foreground}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </mat:ClipBorder>
                                </Grid>
                            </Grid>
                        </telerikPrimitives:LayoutTransformControl>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="transformationRoot"
                                            Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="0" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="transformationRoot"
                                            Storyboard.TargetProperty="(telerikPrimitives:LayoutTransformControl.LayoutTransform)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <RotateTransform Angle="-90" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="DeterminateRoot"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="IndeterminateRoot"
                                            Storyboard.TargetProperty="(UIElement.Visibility)"
                                            Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <Storyboard RepeatBehavior="Forever">
                                            <PointAnimation
                                                Storyboard.TargetName="IndeterminateVisual"
                                                Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.StartPoint)"
                                                From="-0.2,0.5"
                                                To="0.8,0.5"
                                                Duration="0:0:2" />
                                            <PointAnimation
                                                Storyboard.TargetName="IndeterminateVisual"
                                                Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.EndPoint)"
                                                From="0.8,0.5"
                                                To="1.8,0.5"
                                                Duration="0:0:2" />
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="9" />
                <Setter Property="MinHeight" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource RadProgressBarStyle}" TargetType="telerik1:RadProgressBar" />
    <Style x:Key="RadTransitionControlStyle" TargetType="telerik1:RadTransitionControl">
        <Setter Property="ClipToBounds" Value="true" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Transition">
            <Setter.Value>
                <telerikTransitions:WaveTransition
                    Amplitude="0.02"
                    Angle="0.3"
                    Fade="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadTransitionControl">
                    <Grid>
                        <telerikTransitonControl:LayoutAnimationPanel x:Name="PART_RootElement">
                            <Border
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                BorderBrush="#01000000"
                                BorderThickness="1" />
                            <Rectangle
                                x:Name="OldContentPresenter"
                                Width="{Binding OldVisualWidth, ElementName=PART_ContentPresenter}"
                                Height="{Binding OldVisualHeight, ElementName=PART_ContentPresenter}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                Fill="{Binding OldVisualBrush, ElementName=PART_ContentPresenter}"
                                IsHitTestVisible="False"
                                Opacity="0" />
                            <telerikTransitonControl:TransitionPresenter
                                x:Name="PART_ContentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                CurrentContent="{TemplateBinding Content}"
                                CurrentContentTemplate="{TemplateBinding ContentTemplate}"
                                Cursor="{TemplateBinding Cursor}"
                                Easing="{TemplateBinding Easing}"
                                Host="{Binding ElementName=PART_RootElement}"
                                OldContentPresenter="{Binding ElementName=OldContentPresenter}"
                                Transition="{TemplateBinding Transition}"
                                Duration="{TemplateBinding Duration}" />
                        </telerikTransitonControl:LayoutAnimationPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadTransitionControlStyle}" TargetType="telerik1:RadTransitionControl" />
    <Style x:Key="LayoutTransformControlStyle" TargetType="telerikPrimitives:LayoutTransformControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikPrimitives:LayoutTransformControl">
                    <Grid x:Name="RootVisual" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LayoutTransformControlStyle}" TargetType="telerikPrimitives:LayoutTransformControl" />
    <Style
        x:Key="HandleBaseStyle"
        BasedOn="{StaticResource RepeatButtonStyle}"
        TargetType="RepeatButton">
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Padding" Value="0" />
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="IsPressed" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
            </MultiTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
                <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="IncreaseHandleStyle"
        BasedOn="{StaticResource HandleBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="Margin" Value="4,0,0,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronRight}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="DecreaseHandleStyle"
        BasedOn="{StaticResource HandleBaseStyle}"
        TargetType="RepeatButton">
        <Setter Property="Margin" Value="0,0,4,0" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph Glyph="{StaticResource GlyphArrowChevronLeft}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ThumbControlTemplate" TargetType="Thumb">
        <Grid x:Name="RootElement">
            <Path
                x:Name="ThumbPath"
                Data="M1.9,0 L7.9,0 C9.1,0 9.9,0.8 9.9,2 L9.9,8 C9.9,8.8 5.4,14 5.4,14 L4.4,14 C4.4,14 -8.9E-08,8.8 1.4E-14,8 L1.4E-14,2 C-8.9E-08,0.8 0.8,0 1.9,0 z"
                Fill="{TemplateBinding Background}"
                Stretch="Fill"
                Stroke="{TemplateBinding BorderBrush}"
                StrokeThickness="{TemplateBinding BorderThickness}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ThumbPath" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                <Setter TargetName="ThumbPath" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ThumbStyle" TargetType="Thumb">
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource ThumbControlTemplate}" />
    </Style>
    <ControlTemplate x:Key="SelectionMiddleThumbControlTemplate" TargetType="Thumb">
        <Grid>
            <Border
                x:Name="BorderVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=ComplementaryBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SelectionMiddleThumbStyle" TargetType="Thumb">
        <Setter Property="Height" Value="3" />
        <Setter Property="Margin" Value="0,7" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource SelectionMiddleThumbControlTemplate}" />
    </Style>
    <DataTemplate x:Key="DefaultTicksTemplate">
        <Rectangle
            Width="1"
            Height="3"
            Fill="{telerik1:CrystalResource ResourceKey=IconBrush}"
            ToolTipService.ToolTip="{Binding}" />
    </DataTemplate>
    <Style x:Key="RadTickBarStyle" TargetType="telerik1:RadTickBar">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <telerik1:TickBarPanel Background="Transparent" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TrackStyle" TargetType="ContentControl">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="2" />
        <Setter Property="Height" Value="3" />
        <Setter Property="Margin" Value="4,0" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Opacity" Value=".5" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LargeHandleStyle" TargetType="RepeatButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <DataTemplate x:Key="DefaultAutoToolTipContentTemplate">
        <TextBlock
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Text="{Binding ., StringFormat=F2}" />
    </DataTemplate>
    <ControlTemplate x:Key="RadSliderControlTemplate" TargetType="telerik1:RadSlider">
        <telerikPrimitives:LayoutTransformControl x:Name="layoutControl" RenderTransformOrigin=".5 0">
            <telerikPrimitives:LayoutTransformControl.LayoutTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </telerikPrimitives:LayoutTransformControl.LayoutTransform>
            <Grid UseLayoutRounding="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <telerik1:RadTickBar
                    x:Name="TopTickBar"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                    ItemTemplate="{TemplateBinding TickTemplate}"
                    ItemTemplateSelector="{TemplateBinding TickTemplateSelector}"
                    ItemsSource="{TemplateBinding ResultTicks}"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    RenderTransformOrigin="0.5,0.5"
                    Style="{TemplateBinding TickBarStyle}">
                    <telerik1:RadTickBar.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </telerik1:RadTickBar.RenderTransform>
                </telerik1:RadTickBar>
                <ContentControl
                    x:Name="Track"
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    Style="{TemplateBinding TrackStyle}" />
                <RepeatButton
                    x:Name="DecreaseButton"
                    Grid.Row="1"
                    Delay="{TemplateBinding Delay}"
                    Interval="{TemplateBinding RepeatInterval}"
                    Style="{TemplateBinding DecreaseHandleStyle}"
                    Visibility="{TemplateBinding HandlesVisibility}" />
                <RepeatButton
                    x:Name="LargeDecreaseButton"
                    Grid.Row="1"
                    Grid.Column="1"
                    Delay="{TemplateBinding Delay}"
                    Interval="{TemplateBinding RepeatInterval}"
                    Style="{StaticResource LargeHandleStyle}" />
                <Grid
                    Grid.Row="1"
                    Grid.Column="2"
                    VerticalAlignment="Center">
                    <Thumb
                        x:Name="SingleThumbHost"
                        Style="{TemplateBinding ThumbStyle}"
                        Visibility="{TemplateBinding ThumbVisibility}" />
                    <StackPanel
                        x:Name="RangeThumbsPanel"
                        Orientation="Horizontal"
                        Visibility="Collapsed">
                        <Thumb
                            x:Name="RangeStartThumb"
                            Style="{TemplateBinding ThumbStyle}"
                            Visibility="{TemplateBinding ThumbVisibility}" />
                        <Thumb x:Name="RangeMiddleThumb" Style="{TemplateBinding SelectionMiddleThumbStyle}" />
                        <Thumb
                            x:Name="RangeEndThumb"
                            Style="{TemplateBinding AlternateThumbStyle}"
                            Visibility="{TemplateBinding ThumbVisibility}" />
                    </StackPanel>
                </Grid>
                <slider:ThumbsHost
                    x:Name="ThumbsHost"
                    Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    VerticalAlignment="Center"
                    ItemsSource="{Binding Thumbs, RelativeSource={RelativeSource AncestorType=telerik1:RadSlider}}"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    SelectedItem="{Binding ActiveThumb, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                    Visibility="Collapsed" />
                <RepeatButton
                    x:Name="LargeIncreaseButton"
                    Grid.Row="1"
                    Grid.Column="3"
                    Delay="{TemplateBinding Delay}"
                    Interval="{TemplateBinding RepeatInterval}"
                    Style="{StaticResource LargeHandleStyle}" />
                <RepeatButton
                    x:Name="IncreaseButton"
                    Grid.Row="1"
                    Grid.Column="4"
                    Delay="{TemplateBinding Delay}"
                    Interval="{TemplateBinding RepeatInterval}"
                    RenderTransformOrigin="0.5,0.5"
                    Style="{TemplateBinding IncreaseHandleStyle}"
                    Visibility="{TemplateBinding HandlesVisibility}" />
                <telerik1:RadTickBar
                    x:Name="BottomTickBar"
                    Grid.Row="2"
                    Grid.Column="1"
                    Grid.ColumnSpan="3"
                    IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                    ItemTemplate="{TemplateBinding TickTemplate}"
                    ItemTemplateSelector="{TemplateBinding TickTemplateSelector}"
                    ItemsSource="{TemplateBinding ResultTicks}"
                    Maximum="{TemplateBinding Maximum}"
                    Minimum="{TemplateBinding Minimum}"
                    RenderTransformOrigin="0.5,0.5"
                    Style="{TemplateBinding TickBarStyle}">
                    <telerik1:RadTickBar.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform />
                            <SkewTransform />
                            <RotateTransform />
                            <TranslateTransform />
                        </TransformGroup>
                    </telerik1:RadTickBar.RenderTransform>
                </telerik1:RadTickBar>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="OrientationStates">
                    <VisualState x:Name="Horizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="0" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Vertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <RotateTransform Angle="-90" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReversedHorizontal">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <ScaleTransform ScaleX="-1" />
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="ReversedVertical">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="layoutControl" Storyboard.TargetProperty="LayoutTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" />
                                            <RotateTransform Angle="90" />
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BottomTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" />
                                            <RotateTransform Angle="-180" />
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TopTickBar" Storyboard.TargetProperty="RenderTransform">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="-1" />
                                            <RotateTransform Angle="-180" />
                                        </TransformGroup>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="RangeStates">
                    <VisualState x:Name="SingleThumb" />
                    <VisualState x:Name="RangeThumbs">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbsHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ActiveThumb">
                    <VisualState x:Name="MultiRangeInactiveThumb">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DecreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="IncreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MultiRangeActiveThumb">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="DecreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="IncreaseButton" Storyboard.TargetProperty="(IsEnabled)">
                                <DiscreteBooleanKeyFrame KeyTime="0" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="MultipleRanges">
                    <VisualState x:Name="MultipleRangeThumbs">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ThumbsHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RangeThumbsPanel" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SingleThumbHost" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeIncreaseButton" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LargeDecreaseButton" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </telerikPrimitives:LayoutTransformControl>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelectionRangeEnabled" Value="True">
                <Setter TargetName="SingleThumbHost" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="RangeThumbsPanel" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="None">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTickBar" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTickBar" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadSliderStyle" TargetType="telerik1:RadSlider">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="TickTemplate" Value="{StaticResource DefaultTicksTemplate}" />
        <Setter Property="ThumbStyle" Value="{StaticResource ThumbStyle}" />
        <Setter Property="AlternateThumbStyle" Value="{StaticResource ThumbStyle}" />
        <Setter Property="SelectionMiddleThumbStyle" Value="{StaticResource SelectionMiddleThumbStyle}" />
        <Setter Property="TickBarStyle" Value="{StaticResource RadTickBarStyle}" />
        <Setter Property="TrackStyle" Value="{StaticResource TrackStyle}" />
        <Setter Property="IncreaseHandleStyle" Value="{StaticResource IncreaseHandleStyle}" />
        <Setter Property="DecreaseHandleStyle" Value="{StaticResource DecreaseHandleStyle}" />
        <Setter Property="AutoToolTipContentTemplate" Value="{StaticResource DefaultAutoToolTipContentTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template" Value="{StaticResource RadSliderControlTemplate}" />
    </Style>
    <Style x:Key="ThumbsHostStyle" TargetType="{x:Type slider:ThumbsHost}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <slider:ThumbsPanel x:Name="PART_ThumbPanel" IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type slider:ThumbsHost}">
                    <Grid Margin="{TemplateBinding Padding}">
                        <ItemsPresenter x:Name="PART_ItemsPresenter" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RangeSliderThumbStyle" TargetType="telerik1:RangeSliderThumb">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ThumbStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik1:RadSlider}}, Path=ThumbStyle}" />
        <Setter Property="AlternateThumbStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik1:RadSlider}}, Path=AlternateThumbStyle}" />
        <Setter Property="MiddleThumbStyle" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type telerik1:RadSlider}}, Path=SelectionMiddleThumbStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RangeSliderThumb">
                    <StackPanel Orientation="Horizontal">
                        <telerik1:SliderThumb
                            x:Name="StartThumb"
                            InteractionMode="{TemplateBinding InteractionMode}"
                            Style="{TemplateBinding ThumbStyle}"
                            Visibility="{Binding ThumbVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadSlider}}"
                            Value="{Binding RangeStart, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                        <Thumb x:Name="MiddleThumb" Style="{TemplateBinding MiddleThumbStyle}" />
                        <telerik1:SliderThumb
                            x:Name="EndThumb"
                            InteractionMode="{TemplateBinding InteractionMode}"
                            Style="{TemplateBinding AlternateThumbStyle}"
                            Visibility="{Binding ThumbVisibility, RelativeSource={RelativeSource AncestorType=telerik1:RadSlider}}"
                            Value="{Binding RangeEnd, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource ThumbStyle}" TargetType="telerik1:SliderThumb" />
    <Style BasedOn="{StaticResource RangeSliderThumbStyle}" TargetType="telerik1:RangeSliderThumb" />
    <Style BasedOn="{StaticResource ThumbsHostStyle}" TargetType="slider:ThumbsHost" />
    <Style BasedOn="{StaticResource RadTickBarStyle}" TargetType="telerik1:RadTickBar" />
    <Style BasedOn="{StaticResource RadSliderStyle}" TargetType="telerik1:RadSlider" />
    <Style x:Key="RadButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Focusable="False"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  General IsKeyboardFocused setters  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  general setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  general setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadButtonStyle}" TargetType="telerik1:RadButton" />
    <ControlTemplate x:Key="RadHyperlinkButtonControlTemplate" TargetType="telerik1:RadHyperlinkButton">
        <Border
            x:Name="PART_Background"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Hyperlink
                    x:Name="PART_Hyperlink"
                    AutomationProperties.Name="HyperlinkElement"
                    Command="{TemplateBinding Command}"
                    CommandParameter="{TemplateBinding CommandParameter}"
                    Cursor="Hand"
                    FontFamily="{TemplateBinding FontFamily}"
                    FontSize="{TemplateBinding FontSize}"
                    Foreground="{TemplateBinding Foreground}"
                    NavigateUri="{TemplateBinding NavigateUri}"
                    TextDecorations="{x:Null}"
                    TargetName="{TemplateBinding TargetName}">
                    <ContentPresenter
                        x:Name="ContentPresenter"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                </Hyperlink>
            </TextBlock>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline" />
            </Trigger>
            <Trigger Property="IsVisited" Value="True">
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VisitedForeground}" />
                <Setter TargetName="PART_Hyperlink" Property="TextDecorations" Value="Underline" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Hyperlink" Property="IsMouseOver" Value="True" />
                    <Condition Property="IsVisited" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Hyperlink" Property="Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsBackgroundVisible" Value="False">
                <Setter TargetName="PART_Background" Property="Background" Value="Transparent" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadHyperlinkButtonStyle" TargetType="telerik1:RadHyperlinkButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{StaticResource RadHyperlinkButtonNormalBrush}" />
        <Setter Property="VisitedForeground" Value="{StaticResource RadHyperlinkButtonVisitedBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource RadHyperlinkButtonControlTemplate}" />
    </Style>
    <Style BasedOn="{StaticResource RadHyperlinkButtonStyle}" TargetType="telerik1:RadHyperlinkButton" />
    <Style x:Key="RadPathButtonPathStyle" TargetType="Path">
        <Setter Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style x:Key="RadPathButtonStyle" TargetType="telerik1:RadPathButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="PathStyle" Value="{StaticResource RadPathButtonPathStyle}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadPathButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Path
                                x:Name="Path"
                                Grid.Row="1"
                                Grid.Column="1"
                                Data="{TemplateBinding PathGeometry}"
                                Style="{TemplateBinding PathStyle}" />
                            <Grid
                                x:Name="ContentHost"
                                Grid.Row="2"
                                Grid.Column="1"
                                Margin="0,5,0,0">
                                <ContentPresenter
                                    x:Name="Content"
                                    Margin="{TemplateBinding ContentMargin}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    RecognizesAccessKey="True"
                                    TextBlock.Foreground="{TemplateBinding Foreground}" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  General setters for IsKeyboardFocused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="Path" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  content & content template are not preset  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Content" Value="{x:Null}" />
                                <Condition Property="ContentTemplate" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentHost" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  content placement  -->
                        <Trigger Property="ContentPlacement" Value="Left">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="0,0,5,0" />
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Right">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="2" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="ContentPlacement" Value="Top">
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentHost" Property="Margin" Value="0,0,0,5" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Left" />
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Right" />
                                <Condition SourceName="Path" Property="Stretch" Value="None" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="2" />
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Right" />
                                <Condition SourceName="Path" Property="HorizontalAlignment" Value="Left" />
                                <Condition SourceName="Path" Property="Stretch" Value="None" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Column" Value="0" />
                            <Setter TargetName="ContentHost" Property="Grid.Column" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Top" />
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Bottom" />
                                <Condition SourceName="Path" Property="Stretch" Value="None" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="2" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ContentPlacement" Value="Bottom" />
                                <Condition SourceName="Path" Property="VerticalAlignment" Value="Top" />
                                <Condition SourceName="Path" Property="Stretch" Value="None" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Path" Property="Grid.Row" Value="0" />
                            <Setter TargetName="ContentHost" Property="Grid.Row" Value="1" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadPathButtonStyle}" TargetType="telerik1:RadPathButton" />
    <Style x:Key="RadToggleButtonStyle" TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  general setters for IsChecked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                        </Trigger>

                        <!--  general setters for IsKeyboardFocused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  General setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadToggleButtonStyle}" TargetType="telerik1:RadToggleButton" />
    <Style x:Key="RadToggleSwitchButtonStyle" TargetType="telerik1:RadToggleSwitchButton">
        <Setter Property="Padding" Value="6,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="TrackWidth" Value="50" />
        <Setter Property="TrackHeight" Value="22" />
        <Setter Property="ThumbWidth" Value="14" />
        <Setter Property="ThumbHeight" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadToggleSwitchButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TrackWidth}" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            x:Name="UncheckedContent"
                            Grid.Column="2"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding UncheckedContent}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding UncheckedContentTemplate}"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                        <Grid
                            Grid.Column="1"
                            Height="{TemplateBinding TrackHeight}"
                            SnapsToDevicePixels="True">
                            <Rectangle
                                x:Name="TrackBackground"
                                Fill="{TemplateBinding Background}"
                                Opacity="0"
                                RadiusX="9"
                                RadiusY="9"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{TemplateBinding BorderThickness}" />
                            <Rectangle
                                x:Name="UncheckedTrackBackground"
                                Fill="{telerik1:CrystalResource ResourceKey=MainBrush}"
                                RadiusX="9"
                                RadiusY="9"
                                Stroke="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"
                                StrokeThickness="{TemplateBinding BorderThickness}" />
                            <Ellipse
                                x:Name="PART_Thumb"
                                Width="{TemplateBinding ThumbWidth}"
                                Height="{TemplateBinding ThumbHeight}"
                                Margin="4,0"
                                HorizontalAlignment="Left"
                                Fill="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}"
                                RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ContentPresenter
                            x:Name="CheckedContent"
                            Grid.Column="2"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding CheckedContent}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding CheckedContentTemplate}"
                            RecognizesAccessKey="True"
                            TextBlock.Foreground="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
                            <Setter TargetName="UncheckedTrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
                            <Setter Property="BorderThickness" Value="2" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="TrackBackground" Property="Opacity" Value="1" />
                            <Setter TargetName="UncheckedTrackBackground" Property="Opacity" Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                            <Setter TargetName="TrackBackground" Property="Opacity" Value="0" />
                            <Setter TargetName="UncheckedTrackBackground" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="TrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckedContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="UncheckedContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="PART_Thumb" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="PART_Thumb" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                            <Setter TargetName="TrackBackground" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
                            <Setter TargetName="TrackBackground" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="UncheckedTrackBackground" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="UncheckedTrackBackground" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBindingBooleanOrConverter}" Mode="OneWay">
                                            <Binding
                                                Converter="{StaticResource EnumToBooleanConverter}"
                                                ConverterParameter="Left"
                                                Mode="OneWay"
                                                Path="ContentPosition"
                                                RelativeSource="{RelativeSource Self}" />
                                            <Binding
                                                Converter="{StaticResource EnumToBooleanConverter}"
                                                ConverterParameter="Right"
                                                Mode="OneWay"
                                                Path="ContentPosition"
                                                RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="UncheckedContent" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="False" />
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBindingBooleanOrConverter}" Mode="OneWay">
                                            <Binding
                                                Converter="{StaticResource EnumToBooleanConverter}"
                                                ConverterParameter="Left"
                                                Mode="OneWay"
                                                Path="ContentPosition"
                                                RelativeSource="{RelativeSource Self}" />
                                            <Binding
                                                Converter="{StaticResource EnumToBooleanConverter}"
                                                ConverterParameter="Right"
                                                Mode="OneWay"
                                                Path="ContentPosition"
                                                RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CheckedContent" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="{x:Null}" />
                                <Condition Value="True">
                                    <Condition.Binding>
                                        <MultiBinding Converter="{StaticResource MultiBindingBooleanOrConverter}" Mode="OneWay">
                                            <Binding
                                                Converter="{StaticResource EnumToBooleanConverter}"
                                                ConverterParameter="Left"
                                                Mode="OneWay"
                                                Path="ContentPosition"
                                                RelativeSource="{RelativeSource Self}" />
                                            <Binding
                                                Converter="{StaticResource EnumToBooleanConverter}"
                                                ConverterParameter="Right"
                                                Mode="OneWay"
                                                Path="ContentPosition"
                                                RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Condition.Binding>
                                </Condition>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CheckedContent" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="UncheckedContent" Property="Visibility" Value="Hidden" />
                        </MultiDataTrigger>
                        <Trigger Property="ContentPosition" Value="Left">
                            <Setter TargetName="CheckedContent" Property="Grid.Column" Value="0" />
                            <Setter TargetName="UncheckedContent" Property="Grid.Column" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                        </Trigger>
                        <Trigger Property="ContentPosition" Value="Both">
                            <Setter TargetName="UncheckedContent" Property="Grid.Column" Value="0" />
                            <Setter TargetName="CheckedContent" Property="Grid.Column" Value="2" />
                            <Setter TargetName="CheckedContent" Property="HorizontalAlignment" Value="Right" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="CheckedAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut" />
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                        <animation:FadeAnimation
                            Direction="Out"
                            TargetElementName="UncheckedTrackBackground"
                            Duration="0:0:0.4" />
                        <animation:FadeAnimation
                            Direction="In"
                            TargetElementName="TrackBackground"
                            Duration="0:0:0.4" />
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="UncheckedAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut" />
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                        <animation:FadeAnimation
                            Direction="Out"
                            TargetElementName="TrackBackground"
                            Duration="0:0:0.4" />
                        <animation:FadeAnimation
                            Direction="In"
                            TargetElementName="UncheckedTrackBackground"
                            Duration="0:0:0.4" />
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="IsThreeStateUncheckedAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut" />
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="IndeterminateAnimation">
                        <animation:MoveAnimation TargetElementName="PART_Thumb" Duration="0:0:0.4">
                            <animation:MoveAnimation.Easing>
                                <QuadraticEase EasingMode="EaseInOut" />
                            </animation:MoveAnimation.Easing>
                        </animation:MoveAnimation>
                        <animation:FadeAnimation
                            Direction="Out"
                            TargetElementName="TrackBackground"
                            Duration="0:0:0.4" />
                        <animation:FadeAnimation
                            Direction="In"
                            TargetElementName="UncheckedTrackBackground"
                            Duration="0:0:0.4" />
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadToggleSwitchButtonStyle}" TargetType="telerik1:RadToggleSwitchButton" />
    <Style x:Key="RadRadioButtonStyle" TargetType="telerik1:RadRadioButton">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadRadioButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.FocusBrush)}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <ContentPresenter
                            x:Name="Content"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  general setters for IsChecked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                        </Trigger>

                        <!--  general setters for IsKeyboardFocused  -->
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <!--  General setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Hidden" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & checked & visible background  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsBackgroundVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                        </MultiTrigger>

                        <!--  disabled & hidden background  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadRadioButtonStyle}" TargetType="telerik1:RadRadioButton" />
    <Style x:Key="RadDropDownButtonStyle" TargetType="telerik1:RadDropDownButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="DropDownMinHeight" Value="3" />
        <Setter Property="DropDownMinWidth" Value="3" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadDropDownButton">
                    <Grid>
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="FocusVisual"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
                                x:Name="Content"
                                Grid.Row="1"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadDropDownButton}}, Path=HorizontalContentAlignment}"
                                VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadDropDownButton}}, Path=VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                RecognizesAccessKey="True"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                            <Grid
                                x:Name="DropDownIndicator"
                                Grid.Row="2"
                                Grid.Column="1"
                                Width="20"
                                Height="24"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Canvas.ZIndex="2"
                                IsHitTestVisible="False"
                                Visibility="{TemplateBinding DropDownIndicatorVisibility}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <telerik1:RadGlyph
                                    x:Name="arrowUp"
                                    Margin="2,-1,2,-4"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowChevronUp}" />
                                <telerik1:RadGlyph
                                    x:Name="arrowDown"
                                    Grid.Row="1"
                                    Margin="2,-4,2,-1"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowChevronDown}" />
                            </Grid>
                        </Grid>
                        <Popup
                            x:Name="DropDownPopup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            Placement="Bottom"
                            PopupAnimation="{TemplateBinding PopupAnimation}"
                            StaysOpen="False"
                            VerticalOffset="1">
                            <Grid x:Name="PopupGrid" Margin="10,8">
                                <mat:Shadow
                                    x:Name="PopupShadow"
                                    Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                    ShadowDepth="{StaticResource PopupShadowDepth}"
                                    SnapsToDevicePixels="True" />
                                <Border
                                    x:Name="DropDownPopupBorder"
                                    Width="{TemplateBinding DropDownWidth}"
                                    Height="{TemplateBinding DropDownHeight}"
                                    MinWidth="{TemplateBinding DropDownMinWidth}"
                                    MinHeight="{TemplateBinding DropDownMinHeight}"
                                    MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                    MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                    Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                    BorderBrush="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                                    <ContentControl
                                        x:Name="DropDownPopupContent"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Content="{TemplateBinding DropDownContent}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  General IsKeyboardFocused setters  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>

                        <!--  General setters for IsMouseOver  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsPressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  General setters for IsOpen  -->
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PopupShadow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  disabled  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                            <Setter TargetName="DropDownIndicator" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>

                        <!--  DropDownButtonPosition and DropDownPacement  -->
                        <Trigger Property="DropDownButtonPosition" Value="Bottom" />
                        <Trigger Property="DropDownButtonPosition" Value="Left">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="0" />
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Top">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="0" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Right">
                            <Setter TargetName="DropDownIndicator" Property="Grid.Column" Value="2" />
                            <Setter TargetName="DropDownIndicator" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Bottom" />
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="-1" />
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="0" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0" />
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="-1" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1,1,0,1" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0" />
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="1" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="0,1,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadDropDownButtonStyle}" TargetType="telerik1:RadDropDownButton" />
    <Style
        x:Key="SplitButtonPartStyle"
        BasedOn="{StaticResource RadButtonStyle}"
        TargetType="telerik1:RadButton">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=IsButtonPartVisible, Converter={StaticResource BooleanToVisibilityConverter}}" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="mat:MaterialAssist.IsShadowDisabled" Value="True" />
        <Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="IsBackgroundVisible" Value="{Binding IsBackgroundVisible, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="MinHeight" Value="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}" />
    </Style>
    <Style
        x:Key="SplitToggleButtonStyle"
        BasedOn="{StaticResource RadToggleButtonStyle}"
        TargetType="telerik1:RadToggleButton">
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush)}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{x:Null}" />
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.IsShadowDisabled" Value="True" />
        <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomRightTop}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
        <Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
                <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
                <Setter Property="mat:MaterialAssist.FocusBrush" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadSplitButtonStyle" TargetType="telerik1:RadSplitButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="ButtonPartStyle" Value="{StaticResource SplitButtonPartStyle}" />
        <Setter Property="TogglePartStyle" Value="{StaticResource SplitToggleButtonStyle}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadSplitButton">
                    <Grid SnapsToDevicePixels="True">
                        <mat:Shadow
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Background="{x:Null}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <telerik1:RadButton
                                x:Name="ButtonPart"
                                Grid.Row="1"
                                Grid.Column="1"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=LeftTopBottom}"
                                Style="{TemplateBinding ButtonPartStyle}" />
                            <Rectangle
                                x:Name="Separator"
                                Grid.Row="1"
                                Grid.Column="1"
                                MinWidth="1"
                                MinHeight="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch"
                                Fill="{Binding BorderBrush, ElementName=DropDownPart}"
                                Stroke="{x:Null}"
                                StrokeThickness="0" />
                            <telerik1:RadToggleButton
                                x:Name="DropDownPart"
                                Grid.Row="1"
                                Grid.Column="2"
                                mat:MaterialAssist.CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=RightTopBottom}"
                                IsBackgroundVisible="{TemplateBinding IsBackgroundVisible}"
                                IsChecked="{Binding Path=IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Style="{TemplateBinding TogglePartStyle}"
                                Visibility="{TemplateBinding DropDownIndicatorVisibility}">
                                <telerik1:RadToggleButton.Content>
                                    <Grid
                                        x:Name="DropDownIndicator"
                                        Width="20"
                                        Height="24"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Canvas.ZIndex="2">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <telerik1:RadGlyph
                                            x:Name="arrowUp"
                                            Margin="0,-1,0,-3"
                                            Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadToggleButton}}}"
                                            Glyph="{StaticResource GlyphArrowChevronUp}" />
                                        <telerik1:RadGlyph
                                            x:Name="arrowDown"
                                            Grid.Row="1"
                                            Margin="0,-3,0,-1"
                                            Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadToggleButton}}}"
                                            Glyph="{StaticResource GlyphArrowChevronDown}" />
                                    </Grid>
                                </telerik1:RadToggleButton.Content>
                            </telerik1:RadToggleButton>
                        </Grid>
                        <Border
                            x:Name="FocusVisual"
                            Grid.Row="1"
                            Grid.Column="2"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Visibility="Collapsed" />
                        <Popup
                            x:Name="DropDownPopup"
                            AllowsTransparency="True"
                            Focusable="False"
                            HorizontalOffset="0"
                            Placement="Bottom"
                            PopupAnimation="{TemplateBinding PopupAnimation}"
                            StaysOpen="False"
                            VerticalOffset="1">
                            <Grid x:Name="PopupGrid" Margin="10,8">
                                <mat:Shadow
                                    x:Name="PopupShadow"
                                    Width="{TemplateBinding DropDownWidth}"
                                    Height="{TemplateBinding DropDownHeight}"
                                    Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                    ShadowDepth="{StaticResource PopupShadowDepth}"
                                    SnapsToDevicePixels="True" />
                                <Border
                                    x:Name="DropDownPopupBorder"
                                    Width="{TemplateBinding DropDownWidth}"
                                    Height="{TemplateBinding DropDownHeight}"
                                    MinWidth="3"
                                    MinHeight="3"
                                    MaxWidth="{TemplateBinding DropDownMaxWidth}"
                                    MaxHeight="{TemplateBinding DropDownMaxHeight}"
                                    Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                                    BorderBrush="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                                    <ContentControl
                                        x:Name="DropDownPopupContent"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"
                                        Content="{TemplateBinding DropDownContent}"
                                        ContentTemplate="{TemplateBinding DropDownContentTemplate}"
                                        DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext}" />
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <!--  background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsOpen" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                        </MultiTrigger>

                        <!--  hidden background & mouseover button part  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsOpen" Value="False" />
                                <Condition SourceName="ButtonPart" Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="DropDownPart" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
                            <Setter TargetName="DropDownPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                        </MultiTrigger>

                        <!--  focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="True" />
                                <Condition Property="IsOpen" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                                <Condition Property="IsKeyboardFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ButtonPart" Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
                            <Setter TargetName="DropDownPart" Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
                            <Setter TargetName="Separator" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                        </MultiTrigger>

                        <!--  disabled and focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>

                        <!--  IsToggle = True && checked  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsToggle" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
                            <Setter TargetName="ButtonPart" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentMouseOverBrush}" />
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
                            <Setter TargetName="ButtonPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                        </MultiTrigger>

                        <!--  disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                            <Setter TargetName="DropDownPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                        </MultiTrigger>

                        <!--  disabled & background is hidden  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsBackgroundVisible" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="DropDownPart" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsBackgroundVisible" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsOpen" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadSplitButton}, Path=BorderThickness}" />
                        </MultiTrigger>

                        <!--  opened  -->
                        <Trigger Property="IsOpen" Value="True">
                            <Setter TargetName="ButtonPart" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="ButtonPart" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                            <Setter TargetName="Separator" Property="Fill" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                        </Trigger>

                        <!--  DropDownButton Position  -->
                        <Trigger Property="DropDownButtonPosition" Value="Bottom">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="2" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="2" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Bottom" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightBottomLeft}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightTopLeft}" />
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}" />
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=BottomLeftRight}" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Left">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="0" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Left" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Stretch" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomLeftTop}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=BottomRightTop}" />
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=RightTopBottom}" />
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=LeftTopBottom}" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Top">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="1" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Top" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightTopLeft}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness, Converter={StaticResource ThicknessToOrientedThicknessConverter}, ConverterParameter=RightBottomLeft}" />
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=BottomLeftRight}" />
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius), Converter={StaticResource CornerRadiusConverter}, ConverterParameter=TopLeftRight}" />
                        </Trigger>
                        <Trigger Property="DropDownButtonPosition" Value="Right">
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="2" />
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="2" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1" />
                            <Setter TargetName="Separator" Property="HorizontalAlignment" Value="Right" />
                            <Setter TargetName="Separator" Property="VerticalAlignment" Value="Stretch" />
                        </Trigger>

                        <!--  ButtonPartVisibility - Hidden  -->
                        <Trigger Property="IsButtonPartVisible" Value="False">
                            <Setter TargetName="DropDownPart" Property="Grid.Row" Value="0" />
                            <Setter TargetName="DropDownPart" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="DropDownPart" Property="Grid.Column" Value="0" />
                            <Setter TargetName="DropDownPart" Property="Grid.ColumnSpan" Value="3" />
                            <Setter TargetName="DropDownPart" Property="IsTabStop" Value="True" />
                            <Setter TargetName="DropDownPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius)}" />
                            <Setter TargetName="DropDownPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.RowSpan" Value="3" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="0" />
                            <Setter TargetName="FocusVisual" Property="Grid.ColumnSpan" Value="3" />
                            <Setter TargetName="ButtonPart" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  DropDownIndicatorVisibility - Hidden  -->
                        <Trigger Property="DropDownIndicatorVisibility" Value="Collapsed">
                            <Setter TargetName="Separator" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="ButtonPart" Property="mat:MaterialAssist.CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CornerRadius)}" />
                            <Setter TargetName="ButtonPart" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness}" />
                            <Setter TargetName="FocusVisual" Property="Grid.Row" Value="1" />
                            <Setter TargetName="FocusVisual" Property="Grid.Column" Value="1" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Bottom" />
                        <Trigger Property="DropDownPlacement" Value="Top">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="-1" />
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="0" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Left">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0" />
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="-1" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="1,1,0,1" />
                        </Trigger>
                        <Trigger Property="DropDownPlacement" Value="Right">
                            <Setter TargetName="DropDownPopup" Property="VerticalOffset" Value="0" />
                            <Setter TargetName="DropDownPopup" Property="HorizontalOffset" Value="1" />
                            <Setter TargetName="PopupGrid" Property="Margin" Value="0,1,1,1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadSplitButtonStyle}" TargetType="telerik1:RadSplitButton" />
    <ControlTemplate x:Key="StringFilterEditorTemplate" TargetType="filteringEditors:StringFilterEditor">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBox
                MinWidth="120"
                VerticalAlignment="Stretch"
                telerik1:TextBoxBehavior.SelectAllOnGotFocus="True"
                telerik1:TextBoxBehavior.UpdateTextOnEnter="True"
                AutomationProperties.HelpText="{TemplateBinding AutomationProperties.HelpText}"
                AutomationProperties.LabeledBy="{TemplateBinding AutomationProperties.LabeledBy}"
                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
            <telerik1:RadToggleButton
                Grid.Column="1"
                MinWidth="28"
                MinHeight="24"
                Margin="5,0,0,0"
                Padding="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="aA"
                FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                FontSize="{telerik1:CrystalResource ResourceKey=FontSize}"
                IsChecked="{Binding IsCaseSensitive, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Visibility="{Binding MatchCaseVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ToolTipService.ToolTip>
                    <ToolTip telerik1:LocalizationManager.ResourceKey="GridViewFilterMatchCase" />
                </ToolTipService.ToolTip>
            </telerik1:RadToggleButton>
        </Grid>
    </ControlTemplate>
    <Style x:Key="StringFilterEditorStyle" TargetType="filteringEditors:StringFilterEditor">
        <Setter Property="Template" Value="{StaticResource StringFilterEditorTemplate}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <Style BasedOn="{StaticResource StringFilterEditorStyle}" TargetType="filteringEditors:StringFilterEditor" />
    <DataTemplate x:Key="DefaultLegendItemContentTemplate">
        <StackPanel Orientation="Horizontal">
            <Path
                Width="12"
                Height="12"
                Fill="{Binding MarkerFill}">
                <Path.Data>
                    <Binding Path="ActualMarkerGeometry" RelativeSource="{RelativeSource AncestorType=legend:LegendItemControl}" />
                </Path.Data>
            </Path>
            <TextBlock Margin="2" Text="{Binding Title}" />
        </StackPanel>
    </DataTemplate>
    <Style x:Key="LegendItemControlStyle" TargetType="legend:LegendItemControl">
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="MarkerGeometry" Value="{Binding MarkerGeometry}" />
        <Setter Property="ContentTemplate" Value="{StaticResource DefaultLegendItemContentTemplate}" />
        <Setter Property="DefaultMarkerGeometry">
            <Setter.Value>
                <Binding Path="DefaultMarkerGeometry" RelativeSource="{RelativeSource AncestorType=telerik1:RadLegend}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="legend:LegendItemControl">
                    <Border
                        x:Name="PART_OuterBorder"
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStatesGroup">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Faded">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="PART_OuterBorder"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            To="0.5"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Highlighted">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_OuterBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="#FFF1F1F1" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadLegendStyle" TargetType="telerik1:RadLegend">
        <Setter Property="DefaultMarkerGeometry">
            <Setter.Value>
                <RectangleGeometry Rect="1 1 10 10" />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource DefaultLegendItemContentTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadLegend">
                    <Border
                        Margin="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsControl ItemsPanel="{TemplateBinding ItemsPanel}" ItemsSource="{TemplateBinding Items}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <legend:LegendItemControl
                                        Content="{Binding}"
                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadLegend}}"
                                        IsHovered="{Binding IsHovered, Mode=TwoWay}"
                                        VisualState="{Binding VisualState}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LegendItemControlStyle}" TargetType="legend:LegendItemControl" />
    <Style BasedOn="{StaticResource RadLegendStyle}" TargetType="telerik1:RadLegend" />
    <Style x:Key="LinearDropVisualStyle" TargetType="dragDrop:LinearDropVisual">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="dragDrop:LinearDropVisual">
                    <Grid
                        x:Name="DropCueElement"
                        VerticalAlignment="Stretch"
                        IsHitTestVisible="{TemplateBinding IsHitTestVisible}">
                        <Grid
                            x:Name="VerticalState"
                            Height="11"
                            Margin="0,-4,0,0"
                            VerticalAlignment="Top"
                            Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="11" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Ellipse
                                Width="11"
                                Height="11"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" />
                            <Rectangle
                                Grid.Column="1"
                                Height="3"
                                Margin="0,4,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Fill="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}" />
                        </Grid>
                        <Grid
                            x:Name="HorizontalState"
                            Width="11"
                            Margin="-4,0,0,0"
                            HorizontalAlignment="Left"
                            Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="11" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Ellipse
                                Width="11"
                                Height="11"
                                Margin="0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Fill="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" />
                            <Rectangle
                                Grid.Row="1"
                                Width="3"
                                Margin="0,-1,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                Fill="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding BorderBrush}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OrientationStates">
                                <VisualState x:Name="Horizontal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Vertical">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="VerticalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HorizontalState" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource LinearDropVisualStyle}" TargetType="dragDrop:LinearDropVisual" />
    <Style
        x:Key="WatermarkTextBoxLabelStyle"
        BasedOn="{StaticResource LabelStyle}"
        TargetType="telerik1:Label">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=InputOpacity}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Padding" Value="10,0" />
        <Setter Property="Margin" Value="0,4" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=HasLabel}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=IsLabelFloated}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=HasLabel}" Value="False">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RadWatermarkTextBoxStyle" TargetType="telerik1:RadWatermarkTextBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="SelectionBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="ReadOnlyBackground" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyBackgroundBrush}" />
        <Setter Property="DisabledBackground" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="telerik1:CaretBrushHelper.CaretBrush" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="LabelStyle" Value="{StaticResource WatermarkTextBoxLabelStyle}" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="LabelFloatAnimation">
                        <animation:LabelPositionAnimation
                            Direction="Out"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                        <animation:FontSizeAnimation
                            Direction="Out"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="LabelCenterAnimation">
                        <animation:LabelPositionAnimation
                            Direction="In"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                        <animation:FontSizeAnimation
                            Direction="In"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="WatermarkTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl Margin="2,0,0,0" Content="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadWatermarkTextBox">
                    <Grid x:Name="RootElement">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="PART_LabelRowDefinition" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <mat:Shadow
                            x:Name="Shadow"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border
                            x:Name="BorderVisual"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
                        <Border
                            x:Name="ReadOnlyVisual"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            Background="{TemplateBinding ReadOnlyBackground}"
                            BorderBrush="{x:Null}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <Border
                            x:Name="FocusVisual"
                            Grid.RowSpan="2"
                            Grid.ColumnSpan="2"
                            Background="{x:Null}"
                            BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                            BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            IsHitTestVisible="False"
                            Visibility="Collapsed" />
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Grid.RowSpan="2"
                            Margin="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                            Background="Transparent"
                            BorderThickness="0"
                            IsTabStop="False"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <ContentControl
                            x:Name="WatermarkVisualElement"
                            Grid.RowSpan="2"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Content="{TemplateBinding WatermarkContent}"
                            ContentTemplate="{TemplateBinding WatermarkTemplate}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStyle="Italic"
                            Foreground="{TemplateBinding Foreground}"
                            IsHitTestVisible="False"
                            IsTabStop="False"
                            Opacity="{telerik1:CrystalResource ResourceKey=InputOpacity}"
                            Visibility="Hidden">
                            <ContentControl.Template>
                                <ControlTemplate TargetType="ContentControl">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" />
                                </ControlTemplate>
                            </ContentControl.Template>
                        </ContentControl>
                        <ContentPresenter
                            x:Name="AdditionalContentHost"
                            Grid.RowSpan="2"
                            Grid.Column="1"
                            Content="{TemplateBinding AdditionalContent}"
                            ContentTemplate="{TemplateBinding AdditionalContentTemplate}" />
                        <telerik1:Label
                            x:Name="PART_LabelVisualElement"
                            Grid.RowSpan="2"
                            Content="{TemplateBinding Label}"
                            Style="{TemplateBinding LabelStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="1" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyBorderBrush}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyOpacity}" />
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=ReadOnlyOpacity}" />
                            <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsReadOnly" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{x:Null}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DisabledBackground}" />
                            <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                            <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                        <Trigger Property="IsWatermarkVisible" Value="True">
                            <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WatermarkBehavior" Value="HideOnTextEntered">
                            <Setter TargetName="WatermarkVisualElement" Property="Margin" Value="4,0,0,0" />
                        </Trigger>

                        <!--  Invalid  -->
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasLabel" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="Grid.Row" Value="1" />
                            <Setter TargetName="PART_ContentHost" Property="Grid.RowSpan" Value="1" />
                            <Setter TargetName="WatermarkVisualElement" Property="Grid.Row" Value="1" />
                            <Setter TargetName="WatermarkVisualElement" Property="Grid.RowSpan" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.ShowWhenFocused" Value="True">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationOnFocusTooltipTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource RadWatermarkTextBoxStyle}" TargetType="telerik1:RadWatermarkTextBox" />
    <Style x:Key="DragVisualStyle" TargetType="telerikDragDrop:DragVisual">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Border
                            x:Name="SecondItemVisual"
                            Margin="4,4,0,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Border
                            x:Name="ThirdthItemVisual"
                            Margin="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8"
                            Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IsDraggingMultipleItems, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        <Border
                            x:Name="DragBackgroundVisual"
                            Margin="0,0,4,4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Opacity="0.8" />
                        <Border Margin="0,0,4,4" Padding="{TemplateBinding BorderThickness}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <telerik1:RadGlyph
                                    x:Name="NoneEffect"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Foreground="{telerik1:CrystalResource ResourceKey=ValidationBrush}"
                                    Glyph="{StaticResource GlyphCancel}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="MoveEffect"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowRight}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="CopyEffect"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphPlus}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="LinkEffect"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphLinkHorizontal}"
                                    Visibility="Collapsed" />
                                <telerik1:RadGlyph
                                    x:Name="ScrollEffect"
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphArrowsKpi}"
                                    Visibility="Collapsed" />
                                <ContentPresenter
                                    x:Name="Content"
                                    Grid.Column="1"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move, Scroll">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll, Copy, Move">
                            <Setter TargetName="MoveEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Copy, Scroll">
                            <Setter TargetName="CopyEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Link">
                            <Setter TargetName="LinkEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Scroll">
                            <Setter TargetName="ScrollEffect" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource DragVisualStyle}" TargetType="telerikDragDrop:DragVisual" />
    <Style x:Key="RadListBoxItemStyle" TargetType="telerik1:RadListBoxItem">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="mat:MaterialAssist.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="Padding" Value="8,4" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Local" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBoxItem">
                    <Grid Background="Transparent">
                        <Grid Margin="0">
                            <Border
                                x:Name="BorderVisual"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Border
                                x:Name="FocusVisual"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                                IsHitTestVisible="False"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                            <ContentControl
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  IsSelected  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
                            <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                            <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                            <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}" />
                        </Trigger>

                        <!--  Focused  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True" />
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="contentPresenter" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="ListBoxDragVisualStyle"
        BasedOn="{StaticResource DragVisualStyle}"
        TargetType="telerikDragDrop:ListBoxDragVisual">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5,4" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerikDragDrop:DragVisual">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="DragBackgroundVisual"
                                Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0.9" />
                            <telerik1:RadGlyph
                                x:Name="NoneEffect"
                                Margin="5,0,0,0"
                                Foreground="{TemplateBinding Foreground}"
                                Glyph="{StaticResource GlyphCancel}"
                                Visibility="Collapsed" />
                            <ItemsControl
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                ItemsSource="{Binding DraggedItemsStrings}" />
                        </Grid>
                        <Grid x:Name="lowerGrid" Grid.Row="1">
                            <Border
                                Background="{telerik1:CrystalResource ResourceKey=MainBrush}"
                                BorderBrush="{telerik1:CrystalResource ResourceKey=BasicBrush}"
                                BorderThickness="1"
                                Opacity="0.8" />
                            <StackPanel Margin="{TemplateBinding Padding}" Orientation="Horizontal">
                                <telerik1:RadGlyph
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphInsertUp}"
                                    Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=Before}" />
                                <telerik1:RadGlyph
                                    Margin="0,0,5,0"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Top"
                                    FontSize="16"
                                    Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                                    Glyph="{StaticResource GlyphInsertDown}"
                                    Visibility="{Binding DropPosition, Converter={StaticResource DragDropBooleanToVisibilityConverter}, ConverterParameter=After}" />
                                <TextBlock Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}" Text="{Binding DropPosition}" />
                                <TextBlock
                                    Margin="1,0,3,0"
                                    Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"
                                    Text=":" />
                                <TextBlock Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}" Text="{Binding DropItemString}" />
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Effects" Value="None">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Visible" />
                            <Setter TargetName="lowerGrid" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Effects" Value="Move">
                            <Setter TargetName="NoneEffect" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadListBoxStyle" TargetType="telerik1:RadListBox">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="0,5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.IsEnabled" Value="True" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollAreaPadding" Value="30" />

        <!--  ScrollStep should be at least the ActualHeight of the ListBoxItem when scrolling is item based.  -->
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStep" Value="24" />
        <Setter Property="telerik1:ScrollingSettingsBehavior.ScrollStepTime" Value="00:00:00.05" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadListBox">
                    <Grid UseLayoutRounding="True">
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}">
                            <ScrollViewer
                                x:Name="PART_ScrollViewer"
                                Padding="{TemplateBinding Padding}"
                                mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                                Background="{x:Null}"
                                BorderBrush="{x:Null}"
                                BorderThickness="0"
                                HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                IsTabStop="False"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ScrollViewer.InputBindings>
                                    <KeyBinding
                                        Key="A"
                                        Command="telerikPrimitives:ListControl.SelectAllCommand"
                                        Modifiers="Control" />
                                </ScrollViewer.InputBindings>
                                <ItemsPresenter ClipToBounds="True" />
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter
                            x:Name="dragVisualPlaceholder"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadListBoxStyle}" TargetType="telerik1:RadListBox" />
    <Style BasedOn="{StaticResource RadListBoxItemStyle}" TargetType="telerik1:RadListBoxItem" />
    <Style BasedOn="{StaticResource ListBoxDragVisualStyle}" TargetType="telerikDragDrop:ListBoxDragVisual" />
    <Style x:Key="TouchIndicatorStyle" TargetType="touch:TouchIndicator">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="touch:TouchIndicator">
                    <Grid>
                        <telerikShapes:Arc
                            x:Name="PART_InnerArc"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            ArcThickness="3"
                            EndAngle="0.001"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5 0.5"
                            StartAngle="0.001"
                            Stretch="None"
                            StrokeThickness="0">
                            <telerikShapes:Arc.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </telerikShapes:Arc.RenderTransform>
                        </telerikShapes:Arc>
                        <telerikShapes:Arc
                            x:Name="PART_OuterArc"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            ArcThickness="4"
                            EndAngle="0.001"
                            Fill="{TemplateBinding Foreground}"
                            RenderTransformOrigin="0.5 0.5"
                            StartAngle="0.001"
                            Stretch="None"
                            StrokeThickness="0">
                            <telerikShapes:Arc.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </telerikShapes:Arc.RenderTransform>
                        </telerikShapes:Arc>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TouchIndicatorStyle}" TargetType="touch:TouchIndicator" />
    <Style x:Key="TouchSelectorStyle" TargetType="touch:TouchSelector">
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Width" Value="10" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="touch:TouchSelector">
                    <Grid
                        x:Name="container"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Margin="-10,0,0,0"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Canvas.ZIndex="1000">
                        <Ellipse
                            x:Name="beginEllipse"
                            Width="10"
                            Height="10"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding BorderBrush}"
                            StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                            Visibility="Collapsed">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Common">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Center">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="-5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Hidden">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="beginEllipse" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource TouchSelectorStyle}" TargetType="touch:TouchSelector" />
    <Style x:Key="RadFluidContentControlStyle" TargetType="telerik1:RadFluidContentControl">
        <Setter Property="Transition">
            <Setter.Value>
                <telerikTransitions:FadeTransition />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadFluidContentControl">
                    <Grid>
                        <telerikTransitonControl:LayoutAnimationPanel x:Name="PART_RootElement">
                            <Border
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="0"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="0"
                                BorderBrush="#01000000"
                                BorderThickness="1" />
                            <telerikTransitonControl:TransitionPresenter
                                x:Name="ContentElement"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                telerikTransitonControl:TransitionPresenter.AnimationStretch="None"
                                Canvas.ZIndex="2"
                                CurrentContent="{TemplateBinding VisibleContent}"
                                CurrentContentTemplate="{TemplateBinding VisibleContentTemplate}"
                                Host="{Binding ElementName=PART_RootElement}"
                                Transition="{TemplateBinding Transition}"
                                Duration="{TemplateBinding TransitionDuration}" />
                            <Rectangle
                                x:Name="OldContentPresenter"
                                Width="{Binding OldVisualWidth, ElementName=ContentElement}"
                                Height="{Binding OldVisualHeight, ElementName=ContentElement}"
                                telerikTransitonControl:LayoutAnimationPanel.HeightWeight="1"
                                telerikTransitonControl:LayoutAnimationPanel.WidthWeight="1"
                                Canvas.ZIndex="1"
                                Fill="{Binding OldVisualBrush, ElementName=ContentElement}"
                                Opacity="0.0" />
                        </telerikTransitonControl:LayoutAnimationPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadFluidContentControlStyle}" TargetType="telerik1:RadFluidContentControl" />
    <ControlTemplate x:Key="RadButtonContentTemplate" TargetType="telerik1:RadButton">
        <Grid>
            <Border
                x:Name="BorderVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius,
                                               Converter={StaticResource CornerRadiusConverter},
                                               ConverterParameter=TopBottomRight}" />
            <ContentPresenter
                x:Name="Content"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                RecognizesAccessKey="True"
                TextBlock.Foreground="{TemplateBinding Foreground}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Content" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="PasswordBoxButtonStyle" TargetType="telerik1:RadButton">
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource RadButtonContentTemplate}" />
    </Style>
    <DataTemplate x:Key="PasswordButtonContentTemplate">
        <telerik1:RadGlyph Glyph="{StaticResource GlyphPreview}" TextOptions.TextRenderingMode="Aliased" />
    </DataTemplate>
    <Style
        x:Key="PasswordBoxLabelStyle"
        BasedOn="{StaticResource LabelStyle}"
        TargetType="telerik1:Label">
        <Setter Property="IsHitTestVisible" Value="False" />
        <Setter Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=InputOpacity}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Padding" Value="10,0,2,0" />
        <Setter Property="Margin" Value="0,4" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=HasLabel}" Value="True" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadWatermarkTextBox}, Path=IsLabelFloated}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
                <Setter Property="Opacity" Value="1" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadPasswordBox}, Path=HasLabel}" Value="False">
                <Setter Property="Margin" Value="0" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="RadPasswordBoxControlTemplate" TargetType="telerik1:RadPasswordBox">
        <Grid x:Name="RootElement">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition x:Name="PART_LabelRowDefinition" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <mat:Shadow
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <Border
                x:Name="BorderVisual"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}" />
            <Border
                x:Name="ReadOnlyVisual"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Background="{telerik1:CrystalResource ResourceKey=ReadOnlyBackgroundBrush}"
                BorderBrush="{telerik1:CrystalResource ResourceKey=ReadOnlyBorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                IsHitTestVisible="False"
                Visibility="Collapsed" />
            <ScrollViewer
                x:Name="PART_ContentHost"
                Grid.RowSpan="2"
                Padding="{TemplateBinding Padding}"
                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                mat:MaterialAssist.CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius,
                                                                  Converter={StaticResource CornerRadiusConverter},
                                                                  ConverterParameter=TopBottomLeft}"
                Background="Transparent"
                BorderThickness="0"
                IsTabStop="False"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            <telerik1:RadButton
                x:Name="PART_ShowPasswordButton"
                Grid.RowSpan="2"
                Grid.Column="1"
                HorizontalAlignment="Right"
                Content="{TemplateBinding ShowPasswordButtonContent}"
                ContentTemplate="{TemplateBinding ShowPasswordButtonContentTemplate}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                Cursor="Hand"
                Focusable="False"
                IsTabStop="False"
                Style="{StaticResource PasswordBoxButtonStyle}" />
            <ContentControl
                x:Name="WatermarkVisualElement"
                Grid.RowSpan="2"
                Padding="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding WatermarkContent}"
                ContentTemplate="{TemplateBinding WatermarkTemplate}"
                FontStyle="Italic"
                Foreground="{TemplateBinding Foreground}"
                IsHitTestVisible="False"
                IsTabStop="False"
                Opacity="{telerik1:CrystalResource ResourceKey=InputOpacity}"
                Visibility="Hidden">
                <ContentControl.Template>
                    <ControlTemplate TargetType="ContentControl">
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                    </ControlTemplate>
                </ContentControl.Template>
            </ContentControl>
            <telerik1:Label
                x:Name="PART_LabelVisualElement"
                Grid.RowSpan="2"
                Content="{TemplateBinding Label}"
                Style="{TemplateBinding LabelStyle}" />
            <Border
                x:Name="FocusVisual"
                Grid.RowSpan="2"
                Grid.ColumnSpan="2"
                Background="{x:Null}"
                BorderBrush="{TemplateBinding mat:MaterialAssist.FocusBrush}"
                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                CornerRadius="{TemplateBinding mat:MaterialAssist.CornerRadius}"
                IsHitTestVisible="False"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=CurrentText.Length}" Value="0" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShowPasswordButtonVisibility}" Value="Auto" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Padding" Value="8,4" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ShowPasswordButtonVisibility}" Value="Never">
                <Setter Property="Padding" Value="8,4" />
            </DataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsKeyboardFocusWithin" Value="False" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
            </MultiTrigger>

            <!--  MouseOver  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="1" />
                <Setter TargetName="WatermarkVisualElement" Property="Opacity" Value="1" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
            </MultiTrigger>

            <!--  Focused  -->
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="Transparent" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="Transparent" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="IsEnabled" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}" />
            </MultiTrigger>

            <!--  ReadOnly  -->
            <Trigger Property="IsReadOnly" Value="True">
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=InputOpacity}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AccentBasicBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AccentBrush}" />
                <Setter TargetName="ReadOnlyVisual" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsWatermarkVisible" Value="True">
                <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Visible" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsReadOnly" Value="True" />
                    <Condition Property="IsWatermarkVisible" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WatermarkVisualElement" Property="Visibility" Value="Hidden" />
            </MultiTrigger>

            <!--  Invalid  -->
            <Trigger Property="Validation.HasError" Value="True">
                <Setter TargetName="FocusVisual" Property="Visibility" Value="Collapsed" />
            </Trigger>

            <!--  Disabled  -->
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
                <Setter TargetName="PART_ContentHost" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="Transparent" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPasswordVisible" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
                <Setter TargetName="PART_ShowPasswordButton" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding ElementName=PART_ShowPasswordButton, Path=Visibility}" Value="Collapsed">
                <Setter TargetName="PART_ContentHost" Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
            </DataTrigger>
            <Trigger Property="HasLabel" Value="True">
                <Setter TargetName="PART_ContentHost" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_ContentHost" Property="Grid.RowSpan" Value="1" />
                <Setter TargetName="WatermarkVisualElement" Property="Grid.Row" Value="1" />
                <Setter TargetName="WatermarkVisualElement" Property="Grid.RowSpan" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <DataTemplate x:Key="PasswordBoxWatermarkTemplate">
        <ContentControl
            Margin="2,0,0,0"
            Content="{Binding}"
            IsTabStop="False" />
    </DataTemplate>
    <Style x:Key="RadPasswordBoxStyle" TargetType="telerik1:RadPasswordBox">
        <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=MouseOverBrush}" />
        <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="mat:MaterialAssist.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="mat:MaterialAssist.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="SelectionBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=BasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,4,2,4" />
        <Setter Property="CaretBrush" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="ShowPasswordButtonContentTemplate" Value="{StaticResource PasswordButtonContentTemplate}" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationTooltipTemplate}" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource PasswordBoxWatermarkTemplate}" />
        <Setter Property="LabelStyle" Value="{StaticResource PasswordBoxLabelStyle}" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:AnimationGroup AnimationName="LabelFloatAnimation">
                        <animation:LabelPositionAnimation
                            Direction="Out"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                        <animation:FontSizeAnimation
                            Direction="Out"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                    </animation:AnimationGroup>
                    <animation:AnimationGroup AnimationName="LabelCenterAnimation">
                        <animation:LabelPositionAnimation
                            Direction="In"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                        <animation:FontSizeAnimation
                            Direction="In"
                            TargetElementName="PART_LabelVisualElement"
                            Duration="00:00:00.175" />
                    </animation:AnimationGroup>
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource RadPasswordBoxControlTemplate}" />
        <Style.Triggers>
            <Trigger Property="telerik1:ValidationErrorTemplateHelper.ShowWhenFocused" Value="True">
                <Setter Property="Validation.ErrorTemplate" Value="{StaticResource StaticValidationOnFocusTooltipTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource RadPasswordBoxStyle}" TargetType="telerik1:RadPasswordBox" />
    <ControlTemplate x:Key="RadTaskBoardItemTemplate" TargetType="telerik1:RadTaskBoardItem">
        <Grid x:Name="LayoutRoot">
            <mat:Shadow
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
            <Border
                x:Name="BackgroundVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}" />
            <Border
                x:Name="SelectedVisual"
                Background="{TemplateBinding helpers:ThemeHelper.CheckedBrush}"
                BorderBrush="{TemplateBinding helpers:ThemeHelper.FocusBrush}"
                BorderThickness="{telerik1:CrystalResource ResourceKey=FocusThickness}"
                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                Opacity="0" />
            <ContentPresenter
                x:Name="ContentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="SelectedVisual" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Opacity" Value="0.6" />
                <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadTaskBoardItemStyle" TargetType="telerik1:RadTaskBoardItem">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth1" />
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="helpers:ThemeHelper.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=PressedBrush}" />
        <Setter Property="helpers:ThemeHelper.FocusBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template" Value="{StaticResource RadTaskBoardItemTemplate}" />
    </Style>
    <DataTemplate x:Key="TaskBoardCardTitleTemplate">
        <TextBlock
            x:Name="Title"
            MaxHeight="40"
            FontSize="{telerik1:CrystalResource ResourceKey=FontSizeL}"
            FontWeight="Medium"
            Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"
            Text="{Binding}"
            TextTrimming="CharacterEllipsis"
            TextWrapping="WrapWithOverflow"
            Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={StaticResource NullToVisibilityConverter}}">
            <TextBlock.ToolTip>
                <ToolTip MaxWidth="250">
                    <TextBlock Text="{Binding}" TextWrapping="Wrap" />
                </ToolTip>
            </TextBlock.ToolTip>
        </TextBlock>
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardDescriptionTemplate">
        <TextBlock
            x:Name="Description"
            FontSize="{Binding RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoardItem}, Path=FontSize}"
            Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}"
            Text="{Binding}"
            TextTrimming="CharacterEllipsis"
            TextWrapping="Wrap" />
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardNoImageTemplate">
        <Border
            x:Name="Image"
            Width="24"
            Height="24"
            Background="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}"
            BorderBrush="{StaticResource TaskBoardItem_Image_BorderBrush}"
            BorderThickness="1"
            CornerRadius="12">
            <Image Source="{telerik1:RadGlyph Glyph={StaticResource GlyphUser}, Foreground={StaticResource TaskBoardItem_Image_BorderBrush}}" Stretch="None" />
        </Border>
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardImageTemplate">
        <Image
            MaxWidth="40"
            MaxHeight="40"
            Source="{Binding}"
            Stretch="None" />
    </DataTemplate>
    <DataTemplate x:Key="TaskBoardCardTagsTemplate">
        <Border
            Margin="0,0,5,2"
            Background="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}"
            BorderBrush="{telerik1:CrystalResource ResourceKey=ComplementaryBasicBrush}"
            BorderThickness="1"
            CornerRadius="2">
            <TextBlock Padding="4,2" Text="{Binding}" />
        </Border>
    </DataTemplate>
    <taskBoard:TaskBoardDefaultIconTemplateSelector
        x:Key="TaskBoardDefaultIconTemplateSelector"
        GlyphTemplate="{StaticResource TaskBoardCardNoImageTemplate}"
        ImageTemplate="{StaticResource TaskBoardCardImageTemplate}" />
    <DataTemplate x:Key="TaskBoardDefaultCardTemplate">
        <telerik1:RadTaskBoardCard
            Assignee="{Binding Assignee, Mode=TwoWay}"
            CategoryName="{Binding CategoryName, Mode=TwoWay}"
            Content="{Binding Description, Mode=TwoWay}"
            Header="{Binding Title, Mode=TwoWay}"
            Icon="{Binding IconPath, Mode=TwoWay}"
            ShowCategoryIndicator="{Binding ShowCategoryIndicator, Mode=TwoWay}"
            Tags="{Binding Tags}" />
    </DataTemplate>
    <taskBoard:TaskBoardDefaultItemTemplateSelector x:Key="TaskBoardDefaultItemTemplateSelector" CardTemplate="{StaticResource TaskBoardDefaultCardTemplate}" />
    <ControlTemplate x:Key="RadTaskBoardCardTemplate" TargetType="telerik1:RadTaskBoardCard">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Border
                Width="4"
                HorizontalAlignment="Left"
                VerticalAlignment="Stretch"
                Background="{TemplateBinding CategoryBrush}"
                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius,
                                               Converter={StaticResource CornerRadiusConverter},
                                               ConverterParameter=TopBottomLeft}"
                Visibility="{TemplateBinding ShowCategoryIndicator,
                                             Converter={StaticResource BooleanToVisibilityConverter}}" />
            <Grid Grid.Column="1" Margin="{TemplateBinding Padding}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Margin="0,4"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    ContentSource="Header"
                    Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Content, Converter={StaticResource NullToVisibilityConverter}}" />
                <ContentPresenter
                    Grid.Column="1"
                    Margin="5,4"
                    VerticalAlignment="Top"
                    ContentSource="Icon">
                    <ContentPresenter.ToolTip>
                        <ToolTip Content="{TemplateBinding Assignee}" Visibility="{TemplateBinding Assignee, Converter={StaticResource NullToVisibilityConverter}}" />
                    </ContentPresenter.ToolTip>
                </ContentPresenter>
                <ContentPresenter
                    Grid.Row="1"
                    Grid.ColumnSpan="2"
                    Margin="0,3,0,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    ContentSource="Content" />
                <ItemsControl
                    Grid.Row="2"
                    Grid.ColumnSpan="2"
                    Margin="0,3,0,0"
                    FocusVisualStyle="{x:Null}"
                    FontSize="{telerik1:CrystalResource ResourceKey=FontSizeS}"
                    ItemTemplate="{TemplateBinding TagTemplate}"
                    ItemsSource="{TemplateBinding Tags}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </Grid>
        </Grid>
    </ControlTemplate>
    <Style x:Key="RadTaskBoardCardStyle" TargetType="telerik1:RadTaskBoardCard">
        <Setter Property="helpers:ThemeHelper.CornerRadius" Value="{telerik1:CrystalResource ResourceKey=CornerRadius}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="IconTemplateSelector" Value="{StaticResource TaskBoardDefaultIconTemplateSelector}" />
        <Setter Property="HeaderTemplate" Value="{StaticResource TaskBoardCardTitleTemplate}" />
        <Setter Property="ContentTemplate" Value="{StaticResource TaskBoardCardDescriptionTemplate}" />
        <Setter Property="TagTemplate" Value="{StaticResource TaskBoardCardTagsTemplate}" />
        <Setter Property="Template" Value="{StaticResource RadTaskBoardCardTemplate}" />
    </Style>
    <ItemsPanelTemplate x:Key="ColumnPanelTemplate">
        <VirtualizingStackPanel />
    </ItemsPanelTemplate>
    <ControlTemplate x:Key="ColumnContainerTemplate" TargetType="taskBoard:TaskBoardColumnContainer">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border
                x:Name="ColumnHeaderBackgroundVisual"
                Grid.ColumnSpan="2"
                Height="{Binding ColumnHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"
                Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                BorderBrush="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}"
                BorderThickness="1" />
            <telerik1:RadToggleButton
                x:Name="ExpandCollapseColumnButton"
                Grid.Column="1"
                Width="24"
                Height="24"
                Margin="5,0"
                Padding="0"
                VerticalAlignment="Center"
                VerticalContentAlignment="Center"
                mat:MaterialAssist.IsShadowDisabled="True"
                Foreground="{telerik1:CrystalResource ResourceKey=IconBrush}"
                IsBackgroundVisible="False"
                IsChecked="{Binding IsExpanded}"
                Visibility="{Binding CanUserCollapseColumns, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}, Converter={StaticResource BooleanToVisibilityConverter}}">
                <telerik1:RadGlyph
                    x:Name="Glyph"
                    FontSize="16"
                    Glyph="{StaticResource GlyphArrowChevronLeft}" />
            </telerik1:RadToggleButton>
            <mat:Shadow
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
            <ScrollViewer
                x:Name="PART_TaskBoardItemsScrollViewer"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness,
                                                  Converter={StaticResource ThicknessToOrientedThicknessConverter},
                                                  ConverterParameter=LeftRightBottom}"
                CanContentScroll="True"
                HorizontalScrollBarVisibility="Disabled">
                <ItemsPresenter x:Name="TaskBoardItemsItemPresenter" />
            </ScrollViewer>
            <Border
                x:Name="CollapsedColumnBackgroundVisual"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                Background="{telerik1:CrystalResource ResourceKey=AlternativeBrush}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness,
                                                  Converter={StaticResource ThicknessToOrientedThicknessConverter},
                                                  ConverterParameter=LeftRightBottom}"
                Visibility="{Binding IsExpanded, Converter={StaticResource InvertedBooleanToVisibilityConverter}}" />
            <ContentPresenter
                x:Name="ColumnHeaderContentPresenter"
                MaxHeight="{Binding ColumnHeaderHeight, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}"
                Margin="10,0"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{Binding}"
                ContentTemplate="{TemplateBinding HeaderTemplate}"
                RenderTransformOrigin="0.5, 0.5"
                TextBlock.FontFamily="{telerik1:CrystalResource ResourceKey=FontFamily}"
                TextBlock.FontSize="{telerik1:CrystalResource ResourceKey=FontSizeL}"
                TextBlock.FontWeight="Bold"
                TextBlock.Foreground="{telerik1:CrystalResource ResourceKey=MarkerBrush}">
                <ContentPresenter.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                    </Style>
                </ContentPresenter.Resources>
            </ContentPresenter>
            <ContentPresenter
                x:Name="PART_DropVisualPlaceholder"
                Grid.Row="1"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="ExpandCollapseColumnButton" Property="IsMouseOver" Value="True">
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
            </Trigger>
            <Trigger SourceName="ExpandCollapseColumnButton" Property="IsPressed" Value="True">
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
            </Trigger>
            <Trigger SourceName="ExpandCollapseColumnButton" Property="IsChecked" Value="True">
                <Setter TargetName="ExpandCollapseColumnButton" Property="helpers:ThemeHelper.CheckedBrush" Value="Transparent" />
                <Setter TargetName="ExpandCollapseColumnButton" Property="Background" Value="Transparent" />
                <Setter TargetName="ExpandCollapseColumnButton" Property="BorderThickness" Value="0" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsChecked" Value="False" />
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsChecked" Value="False" />
                    <Condition SourceName="ExpandCollapseColumnButton" Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="ExpandCollapseColumnButton" Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
            </MultiTrigger>
            <Trigger Property="IsExpanded" Value="False">
                <Setter TargetName="Glyph" Property="Glyph" Value="{StaticResource GlyphArrowChevronRight}" />
                <Setter TargetName="TaskBoardItemsItemPresenter" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_TaskBoardItemsScrollViewer" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="ExpandCollapseColumnButton" Property="Grid.Column" Value="0" />
                <Setter TargetName="ExpandCollapseColumnButton" Property="HorizontalAlignment" Value="Center" />
                <Setter TargetName="ColumnHeaderContentPresenter" Property="Grid.Row" Value="1" />
                <Setter TargetName="ColumnHeaderContentPresenter" Property="HorizontalAlignment" Value="Center" />
                <Setter TargetName="ColumnHeaderContentPresenter" Property="VerticalAlignment" Value="Top" />
                <Setter TargetName="ColumnHeaderContentPresenter" Property="Margin" Value="0,20" />
                <Setter TargetName="ColumnHeaderContentPresenter" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="-90" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="TaskBoardColumnContainerStyle" TargetType="taskBoard:TaskBoardColumnContainer">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template" Value="{StaticResource ColumnContainerTemplate}" />
        <Setter Property="ItemsPanel" Value="{StaticResource ColumnPanelTemplate}" />
        <Setter Property="ItemsSource" Value="{Binding Items}" />
        <Setter Property="Padding" Value="5,10" />
        <Setter Property="Header" Value="{Binding Header}" />
        <Setter Property="HeaderTemplate" Value="{Binding HeaderTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ItemTemplate" Value="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}" />
        <Setter Property="ItemTemplateSelector" Value="{Binding ItemTemplateSelector, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}" />
        <Setter Property="ItemContainerStyle" Value="{Binding ItemContainerStyle, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}" />
        <Setter Property="ItemContainerStyleSelector" Value="{Binding ItemContainerStyleSelector, RelativeSource={RelativeSource AncestorType=telerik1:RadTaskBoard}}" />
    </Style>
    <ControlTemplate x:Key="TaskBoardTemplate" TargetType="telerik1:RadTaskBoard">
        <Grid
            x:Name="LayoutRoot"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
            <mat:Shadow
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                ShadowDepth="{TemplateBinding mat:MaterialAssist.ShadowDepth}" />
            <Border
                x:Name="BorderVisual"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}" />
            <ScrollViewer
                x:Name="PART_ScrollViewer"
                Padding="{TemplateBinding Padding}"
                helpers:ThemeHelper.CornerRadius="{TemplateBinding helpers:ThemeHelper.CornerRadius}"
                Background="Transparent"
                BorderBrush="Transparent"
                BorderThickness="0"
                CanContentScroll="True"
                HorizontalScrollBarVisibility="Auto"
                VerticalScrollBarVisibility="Hidden">
                <ItemsPresenter />
            </ScrollViewer>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="LayoutRoot" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ItemsPanelTemplate x:Key="TaskBoardItemsPanel">
        <taskBoard:TaskBoardColumnsPanel />
    </ItemsPanelTemplate>
    <Style x:Key="RadTaskBoardStyle" TargetType="telerik1:RadTaskBoard">
        <Setter Property="mat:MaterialAssist.ShadowDepth" Value="Depth3" />
        <Setter Property="CollapsedColumnWidth" Value="38" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="ColumnHeaderHeight" Value="44" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource TaskBoardTemplate}" />
        <Setter Property="ItemsPanel" Value="{StaticResource TaskBoardItemsPanel}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource TaskBoardDefaultItemTemplateSelector}" />
        <Setter Property="DragDropBehavior">
            <Setter.Value>
                <taskBoard:TaskBoardColumnDragDropBehavior />
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadTaskBoardItemStyle}" TargetType="telerik1:RadTaskBoardItem" />
    <Style BasedOn="{StaticResource RadTaskBoardCardStyle}" TargetType="telerik1:RadTaskBoardCard" />
    <Style BasedOn="{StaticResource RadTaskBoardStyle}" TargetType="telerik1:RadTaskBoard" />
    <Style BasedOn="{StaticResource TaskBoardColumnContainerStyle}" TargetType="taskBoard:TaskBoardColumnContainer" />
    <ControlTemplate x:Key="CalloutTemplate" TargetType="telerik1:RadCallout">
        <Grid>
            <callout:CanvasGrid x:Name="PART_CanvasGrid">
                <Path
                    x:Name="PART_Geometry"
                    Data="{TemplateBinding GeometryResult}"
                    Fill="{TemplateBinding Background}"
                    Opacity="{TemplateBinding Opacity}"
                    Stretch="{TemplateBinding Stretch}"
                    Stroke="{TemplateBinding BorderBrush}"
                    StrokeDashArray="{TemplateBinding StrokeDashArray}"
                    StrokeThickness="{TemplateBinding StrokeThickness}"
                    UseLayoutRounding="True" />
            </callout:CanvasGrid>
            <ContentPresenter
                x:Name="PART_Content"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                ContentSource="Content"
                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                TextBlock.FontSize="{TemplateBinding FontSize}"
                TextBlock.Foreground="{TemplateBinding Foreground}"
                TextBlock.TextAlignment="{TemplateBinding TextAlignment}" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="RadCalloutStyle" TargetType="telerik1:RadCallout">
        <Setter Property="Template" Value="{StaticResource CalloutTemplate}" />
        <Setter Property="MinHeight" Value="50" />
        <Setter Property="MinWidth" Value="100" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style BasedOn="{StaticResource RadCalloutStyle}" TargetType="telerik1:RadCallout" />
    <ControlTemplate x:Key="BadgeTemplate" TargetType="telerik1:RadBadge">
        <Grid x:Name="LayoutRoot">
            <Path
                x:Name="PART_Geometry"
                Width="{TemplateBinding Width}"
                Height="{TemplateBinding Height}"
                Data="{TemplateBinding Geometry}"
                Fill="{TemplateBinding Background}"
                Opacity="{TemplateBinding Opacity}"
                Stretch="Fill"
                Stroke="{TemplateBinding Stroke}"
                StrokeDashArray="{TemplateBinding StrokeDashArray}"
                StrokeThickness="{TemplateBinding StrokeThickness}"
                UseLayoutRounding="True" />
            <ContentPresenter
                x:Name="PART_Content"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                ContentSource="Content"
                TextBlock.FontFamily="{TemplateBinding FontFamily}"
                TextBlock.FontSize="{TemplateBinding FontSize}"
                TextBlock.Foreground="{TemplateBinding Foreground}"
                TextBlock.TextAlignment="{TemplateBinding TextAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="LayoutRoot" Property="Opacity" Value="0.2" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadBadgeStyle" TargetType="telerik1:RadBadge">
        <Setter Property="Template" Value="{StaticResource BadgeTemplate}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="#FF00C807" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>
    <Style BasedOn="{StaticResource RadBadgeStyle}" TargetType="telerik1:RadBadge" />
    <telerik1:IndexConverter x:Key="IndexConverter" />
    <ControlTemplate x:Key="RadStepProgressBarItemTemplate" TargetType="{x:Type telerik1:RadStepProgressBarItem}">
        <Grid x:Name="PART_RootGrid">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid
                x:Name="PART_Indicator"
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
                <Path
                    x:Name="PART_IndicatorGeometry"
                    Width="{TemplateBinding ShapeWidth}"
                    Height="{TemplateBinding ShapeHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{TemplateBinding ShapeGeometry}"
                    Fill="{TemplateBinding Background}"
                    Stretch="Fill"
                    Stroke="{TemplateBinding ShapeStroke}"
                    StrokeThickness="{TemplateBinding ShapeStrokeThickness}" />
                <Path
                    x:Name="PART_IndicatorGeometry_MouseOver"
                    Width="{TemplateBinding ShapeWidth}"
                    Height="{TemplateBinding ShapeHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{TemplateBinding ShapeGeometry}"
                    Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.MouseOverBackgroundBrush)}"
                    Opacity="0"
                    Stretch="Fill"
                    Stroke="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.MouseOverBrush)}"
                    StrokeThickness="{TemplateBinding ShapeStrokeThickness}" />
                <ContentPresenter
                    x:Name="PART_IndicatorContent"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    ContentSource="NotStartedIndicatorContent"
                    TextBlock.FontWeight="{TemplateBinding FontWeight}"
                    TextBlock.Foreground="{TemplateBinding Foreground}" />
            </Grid>
            <ContentPresenter
                x:Name="Part_AdditionalContent"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                ContentSource="AdditionalContent" />
            <ContentPresenter
                x:Name="Part_PrimaryContent"
                Grid.Row="2"
                Grid.Column="1"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                ContentSource="Content" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter TargetName="Part_AdditionalContent" Property="Grid.Column" Value="0" />
                <Setter TargetName="Part_AdditionalContent" Property="Grid.Row" Value="1" />
                <Setter TargetName="Part_PrimaryContent" Property="Grid.Column" Value="2" />
                <Setter TargetName="Part_PrimaryContent" Property="Grid.Row" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="PART_IndicatorGeometry" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.DisabledBackgroundBrush)}" />
                <Setter TargetName="PART_IndicatorGeometry" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.DisabledBrush)}" />
                <Setter TargetName="PART_IndicatorContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                <Setter TargetName="Part_PrimaryContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                <Setter TargetName="Part_AdditionalContent" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
            </Trigger>
            <Trigger Property="Status" Value="Completed">
                <Setter TargetName="PART_IndicatorContent" Property="TextBlock.Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerInvertedBrush}" />
                <Setter TargetName="PART_IndicatorGeometry" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.CheckedBackgroundBrush)}" />
                <Setter TargetName="PART_IndicatorGeometry" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.CheckedBrush)}" />
            </Trigger>
            <Trigger Property="Status" Value="Indeterminate">
                <Setter TargetName="PART_IndicatorGeometry" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                <Setter TargetName="PART_IndicatorGeometry" Property="Stroke" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="PART_IndicatorGeometry" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.CheckedBackgroundBrush)}" />
            </Trigger>
            <Trigger SourceName="PART_Indicator" Property="IsMouseOver" Value="True">
                <Setter TargetName="PART_IndicatorContent" Property="TextBlock.Foreground" Value="{telerik1:CrystalResource ResourceKey=IconBrush}" />
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="SelectedState">
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_IndicatorGeometry_MouseOver"
                                Storyboard.TargetProperty="Opacity"
                                From="0"
                                To="1"
                                Duration="00:00:00.20" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_IndicatorGeometry_MouseOver"
                                Storyboard.TargetProperty="Opacity"
                                From="1"
                                To="0"
                                Duration="00:00:00.20" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsEnabled" Value="False" />
                    <Condition Property="Status" Value="Completed" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_IndicatorContent" Property="TextBlock.Foreground" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(helpers:ThemeHelper.DisabledForegroundBrush)}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="RadStepProgressBarItemStyle" TargetType="{x:Type telerik1:RadStepProgressBarItem}">
        <Setter Property="helpers:ThemeHelper.MouseOverBackgroundBrush" Value="{telerik1:CrystalResource ResourceKey=PrimaryBackgroundBrush}" />
        <Setter Property="helpers:ThemeHelper.MouseOverBrush" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="helpers:ThemeHelper.CheckedBackgroundBrush" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="helpers:ThemeHelper.CheckedBrush" Value="{telerik1:CrystalResource ResourceKey=AccentPressedBrush}" />
        <Setter Property="helpers:ThemeHelper.DisabledBackgroundBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBrush}" />
        <Setter Property="helpers:ThemeHelper.DisabledForegroundBrush" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="helpers:ThemeHelper.DisabledBrush" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="ShapeStroke" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=MainBrush}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="ShapeStrokeThickness" Value="1" />
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
        <Setter Property="ShapeWidth" Value="30" />
        <Setter Property="ShapeHeight" Value="30" />
        <Setter Property="ShapeGeometry" Value="{telerik1:Geometry Type=Circle}" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="NotStartedIndicatorContent" Value="{Binding Index, RelativeSource={RelativeSource Self}, Converter={StaticResource IndexConverter}}" />
        <Setter Property="CompletedIndicatorContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <telerik1:RadGlyph x:Name="GlyphCheck" Glyph="{StaticResource GlyphCheck}" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding FlowDirection, RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadStepProgressBar}}}" Value="RightToLeft">
                            <Setter TargetName="GlyphCheck" Property="LayoutTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="-1" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IndeterminateIndicatorContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Path
                        x:Name="Path"
                        Width="12"
                        Height="12"
                        Data="{telerik1:Geometry Type=Circle}"
                        Fill="{Binding Path=(helpers:ThemeHelper.CheckedBackgroundBrush), RelativeSource={RelativeSource AncestorType={x:Type telerik1:RadStepProgressBarItem}}}"
                        Stretch="Fill" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="Template" Value="{StaticResource RadStepProgressBarItemTemplate}" />
    </Style>
    <Style x:Key="RadStepProgressBarStyle" TargetType="{x:Type telerik1:RadStepProgressBar}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TrackThickness" Value="2" />
        <Setter Property="Background" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="TrackFill" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0,2,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type telerik1:RadStepProgressBar}">
                    <ScrollViewer
                        x:Name="PART_ScrollViewer"
                        Margin="0"
                        Padding="{TemplateBinding Padding}"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                        IsTabStop="False"
                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                        <Grid>
                            <Canvas>
                                <telerik1:RadProgressBar
                                    x:Name="PART_ProgressBar"
                                    VerticalAlignment="Stretch"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Foreground="{TemplateBinding TrackFill}"
                                    Orientation="{TemplateBinding Orientation}"
                                    RenderTransformOrigin="0.5 0.5"
                                    Value="0" />
                            </Canvas>
                            <ItemsPresenter />
                        </Grid>
                    </ScrollViewer>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ProgressBar" Property="Opacity" Value="{telerik1:CrystalResource ResourceKey=DisabledOpacity}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <stepProgressBar:StepProgressBarPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=telerik1:RadStepProgressBar}}" RenderTransformOrigin="0.5 0.5" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadStepProgressBarItemStyle}" TargetType="telerik1:RadStepProgressBarItem" />
    <Style BasedOn="{StaticResource RadStepProgressBarStyle}" TargetType="telerik1:RadStepProgressBar" />
    <Style x:Key="RadCircularProgressBarStyle" TargetType="telerik1:RadCircularProgressBar">
        <Setter Property="FontFamily" Value="{telerik1:CrystalResource ResourceKey=FontFamily}" />
        <Setter Property="FontSize" Value="{telerik1:CrystalResource ResourceKey=FontSize}" />
        <Setter Property="Foreground" Value="{telerik1:CrystalResource ResourceKey=MarkerBrush}" />
        <Setter Property="TrackFill" Value="{telerik1:CrystalResource ResourceKey=AlternativeBasicBrush}" />
        <Setter Property="IndicatorFill" Value="{telerik1:CrystalResource ResourceKey=AccentSelectedBrush}" />
        <Setter Property="SecondaryIndicatorFill" Value="{telerik1:CrystalResource ResourceKey=AccentFocusedBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TrackStartRadius" Value="0.875" />
        <Setter Property="IndicatorStartRadius" Value="0.875" />
        <Setter Property="MinWidth" Value="64" />
        <Setter Property="MinHeight" Value="64" />
        <Setter Property="animation:AnimationManager.AnimationSelector">
            <Setter.Value>
                <animation:AnimationSelector>
                    <animation:RadDoubleAnimation
                        AnimationName="IndeterminateIndicatorAnimation"
                        Direction="Out"
                        PropertyName="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                        RepeatBehavior="Forever"
                        TargetElementName="PART_IndicatorPath"
                        TargetValue="360"
                        Duration="00:00:01" />
                </animation:AnimationSelector>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="telerik1:RadCircularProgressBar">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Path x:Name="PART_TrackPath" Fill="{TemplateBinding TrackFill}" />
                            <Path x:Name="PART_SecondaryIndicatorPath" Fill="{TemplateBinding SecondaryIndicatorFill}" />
                            <Path
                                x:Name="PART_IndicatorPath"
                                Fill="{TemplateBinding IndicatorFill}"
                                RenderTransformOrigin=".5 .5"
                                Stroke="{TemplateBinding IndicatorStroke}"
                                StrokeThickness="{TemplateBinding IndicatorThickness}" />
                            <Canvas x:Name="PART_RangePathsPanel" />
                        </Grid>
                        <ContentPresenter
                            x:Name="PART_Content"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Content" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource RadCircularProgressBarStyle}" TargetType="telerik1:RadCircularProgressBar" />
</ResourceDictionary>
